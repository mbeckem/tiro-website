{"pageProps":{"slug":"classes/classtiro_1_1generic__error","frontMatter":{"title":"tiro::generic_error","summary":"Generic error with a simple message."},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tirogeneric_error\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#tirogeneric_error\"\n  }, \"#\"), \"tiro::generic_error\"), mdx(\"p\", null, \"Generic error with a simple message.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#include \\\"tiropp/error.hpp\\\"\")), mdx(\"p\", null, \"Inherits from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error\"\n  }, \"error\"), \", exception\"), mdx(\"p\", null, \"Inherited by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1bad__handle__check\"\n  }, \"bad_handle_check\")), mdx(\"h2\", {\n    \"id\": \"public-functions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-functions\"\n  }, \"#\"), \"Public Functions\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"virtual const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1generic__error#function-what\"\n  }, \"what\")), \"() const override\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"virtual const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1generic__error#function-message\"\n  }, \"message\")), \"() const override\", mdx(\"br\", null), \"A simple message line that describes the error condition. Never null.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1generic__error#function-generic_error\"\n  }, \"generic_error\")), \"(std::string message)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"virtual const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1generic__error#function-details\"\n  }, \"details\")), \"() const override\", mdx(\"br\", null), \"Optional detailed error information. Never null, but may be empty.\")))), mdx(\"h2\", {\n    \"id\": \"public-functions-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-functions-documentation\"\n  }, \"#\"), \"Public Functions Documentation\"), mdx(\"h3\", {\n    \"id\": \"function-what\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-what\"\n  }, \"#\"), \"function what\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline virtual const char * what() const override\\n\")), mdx(\"h3\", {\n    \"id\": \"function-message\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-message\"\n  }, \"#\"), \"function message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline virtual const char * message() const override\\n\")), mdx(\"p\", null, \"A simple message line that describes the error condition. Never null. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reimplements\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error#function-message\"\n  }, \"tiro::error::message\")), mdx(\"h3\", {\n    \"id\": \"function-generic_error\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-generic_error\"\n  }, \"#\"), \"function generic_error\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline explicit generic_error(\\n    std::string message\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-details\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-details\"\n  }, \"#\"), \"function details\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline virtual const char * details() const override\\n\")), mdx(\"p\", null, \"Optional detailed error information. Never null, but may be empty. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reimplements\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error#function-details\"\n  }, \"tiro::error::details\")), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on  5 May 2021 at 11:21:35 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tirogeneric_error\"><a class=\"anchor-link\" href=\"#tirogeneric_error\">#</a>tiro::generic_error</h1><p>Generic error with a simple message.\n<code>#include &quot;tiropp/error.hpp&quot;</code></p><p>Inherits from <a href=\"/tiro-website/docs/api/classes/classtiro_1_1error\">error</a>, exception</p><p>Inherited by <a href=\"/tiro-website/docs/api/classes/classtiro_1_1bad__handle__check\">bad_handle_check</a></p><h2 id=\"public-functions\"><a class=\"anchor-link\" href=\"#public-functions\">#</a>Public Functions</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>virtual const char *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1generic__error#function-what\">what</a></strong>() const override</td></tr><tr><td>virtual const char *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1generic__error#function-message\">message</a></strong>() const override<br/>A simple message line that describes the error condition. Never null.</td></tr><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1generic__error#function-generic_error\">generic_error</a></strong>(std::string message)</td></tr><tr><td>virtual const char *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1generic__error#function-details\">details</a></strong>() const override<br/>Optional detailed error information. Never null, but may be empty.</td></tr></tbody></table><h2 id=\"public-functions-documentation\"><a class=\"anchor-link\" href=\"#public-functions-documentation\">#</a>Public Functions Documentation</h2><h3 id=\"function-what\"><a class=\"anchor-link\" href=\"#function-what\">#</a>function what</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">virtual</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">what</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> override</span></div></pre></div><h3 id=\"function-message\"><a class=\"anchor-link\" href=\"#function-message\">#</a>function message</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">virtual</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">message</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> override</span></div></pre></div><p>A simple message line that describes the error condition. Never null. </p><p><strong>Reimplements</strong>: <a href=\"/tiro-website/docs/api/classes/classtiro_1_1error#function-message\">tiro::error::message</a></p><h3 id=\"function-generic_error\"><a class=\"anchor-link\" href=\"#function-generic_error\">#</a>function generic_error</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">explicit</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">generic_error</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">string message</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-details\"><a class=\"anchor-link\" href=\"#function-details\">#</a>function details</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">virtual</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">details</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> override</span></div></pre></div><p>Optional detailed error information. Never null, but may be empty. </p><p><strong>Reimplements</strong>: <a href=\"/tiro-website/docs/api/classes/classtiro_1_1error#function-details\">tiro::error::details</a></p><hr/><p>Updated on  5 May 2021 at 11:21:35 CEST</p>","scope":{}}},"__N_SSG":true}