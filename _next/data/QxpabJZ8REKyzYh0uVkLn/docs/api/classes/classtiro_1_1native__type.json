{"pageProps":{"slug":"classes/classtiro_1_1native__type","frontMatter":{"title":"tiro::native_type"},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tironative_type\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#tironative_type\"\n  }, \"#\"), \"tiro::native_type\"), mdx(\"p\", null, \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#detailed-description\"\n  }, \"More...\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#include \\\"tiropp/fwd.hpp\\\"\")), mdx(\"h2\", {\n    \"id\": \"public-functions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-functions\"\n  }, \"#\"), \"Public Functions\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-~native_type\"\n  }, \"~native_type\")), \"() =default\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bool\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-valid\"\n  }, \"valid\")), \"() const\", mdx(\"br\", null), \"Returns true is valid, i.e. if this \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type\"\n  }, \"native_type\"), \" has not been moved from.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type\"\n  }, \"native_type\"), \" &\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-operator=\"\n  }, \"operator=\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type\"\n  }, \"native_type\"), \" && ) =default\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-native_type\"\n  }, \"native_type\")), \"(std::string name)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-native_type\"\n  }, \"native_type\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type\"\n  }, \"native_type\"), \" && ) =default\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const std::string &\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-name\"\n  }, \"name\")), \"() const\", mdx(\"br\", null), \"Returns the native type's name (the value of original constructor argument).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native\"\n  }, \"native\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-make\"\n  }, \"make\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, T && instance) const\", mdx(\"br\", null), \"Constructs a new object of this type. The contents of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"instance\"), \" will be moved into the constructed object.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bool\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-is_instance\"\n  }, \"is_instance\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native\"\n  }, \"native\"), \" & object) const\", mdx(\"br\", null), \"Returns true if the given native object is an instance of this type.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bool\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-is_destroyed\"\n  }, \"is_destroyed\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native\"\n  }, \"native\"), \" & object) const\", mdx(\"br\", null), \"Returns true if the referenced object was already destroyed manually by calling \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"[destroy()]()\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-destroy\"\n  }, \"destroy\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native\"\n  }, \"native\"), \" & object) const\", mdx(\"br\", null), \"Manually destroys the native object.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"T *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type#function-access\"\n  }, \"access\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native\"\n  }, \"native\"), \" & object) const\", mdx(\"br\", null), \"Returns the address of the native object instance.\")))), mdx(\"h2\", {\n    \"id\": \"detailed-description\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#detailed-description\"\n  }, \"#\"), \"Detailed Description\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"template <typename T >\\nclass tiro::native_type;\\n\")), mdx(\"h2\", {\n    \"id\": \"public-functions-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-functions-documentation\"\n  }, \"#\"), \"Public Functions Documentation\"), mdx(\"h3\", {\n    \"id\": \"function-native_type\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-native_type\"\n  }, \"#\"), \"function ~native_type\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"~native_type() =default\\n\")), mdx(\"h3\", {\n    \"id\": \"function-valid\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-valid\"\n  }, \"#\"), \"function valid\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline bool valid() const\\n\")), mdx(\"p\", null, \"Returns true is valid, i.e. if this \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type\"\n  }, \"native_type\"), \" has not been moved from. \"), mdx(\"h3\", {\n    \"id\": \"function-operator\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-operator\"\n  }, \"#\"), \"function operator=\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"native_type & operator=(\\n    native_type && \\n) =default\\n\")), mdx(\"h3\", {\n    \"id\": \"function-native_type-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-native_type-1\"\n  }, \"#\"), \"function native_type\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline explicit native_type(\\n    std::string name\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-native_type-2\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-native_type-2\"\n  }, \"#\"), \"function native_type\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"native_type(\\n    native_type && \\n) =default\\n\")), mdx(\"h3\", {\n    \"id\": \"function-name\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-name\"\n  }, \"#\"), \"function name\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const std::string & name() const\\n\")), mdx(\"p\", null, \"Returns the native type's name (the value of original constructor argument). \"), mdx(\"h3\", {\n    \"id\": \"function-make\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make\"\n  }, \"#\"), \"function make\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline native make(\\n    vm & v,\\n    T && instance\\n) const\\n\")), mdx(\"p\", null, \"Constructs a new object of this type. The contents of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"instance\"), \" will be moved into the constructed object. \"), mdx(\"h3\", {\n    \"id\": \"function-is_instance\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-is_instance\"\n  }, \"#\"), \"function is_instance\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline bool is_instance(\\n    const native & object\\n) const\\n\")), mdx(\"p\", null, \"Returns true if the given native object is an instance of this type. \"), mdx(\"h3\", {\n    \"id\": \"function-is_destroyed\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-is_destroyed\"\n  }, \"#\"), \"function is_destroyed\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline bool is_destroyed(\\n    const native & object\\n) const\\n\")), mdx(\"p\", null, \"Returns true if the referenced object was already destroyed manually by calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[destroy()]()\"), \". \"), mdx(\"h3\", {\n    \"id\": \"function-destroy\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-destroy\"\n  }, \"#\"), \"function destroy\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline void destroy(\\n    const native & object\\n) const\\n\")), mdx(\"p\", null, \"Manually destroys the native object. \"), mdx(\"p\", null, \"Future \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[access()](/docs/api/classes/classtiro_1_1native__type#function-access)\"), \" calls to the same object will fail with an exception. Note that objects are destroyed automatically when they are collected by the garbage collector. This function allows the programmer to trigger the destruction at an earlier point in time. \"), mdx(\"h3\", {\n    \"id\": \"function-access\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-access\"\n  }, \"#\"), \"function access\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline T * access(\\n    const native & object\\n) const\\n\")), mdx(\"p\", null, \"Returns the address of the native object instance. \"), mdx(\"p\", null, \"TODO: This API will have to change (or become more dangeous) once the gc starts to move objects around. \"), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on  5 May 2021 at 11:21:35 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tironative_type\"><a class=\"anchor-link\" href=\"#tironative_type\">#</a>tiro::native_type</h1><p> <a href=\"#detailed-description\">More...</a></p><p><code>#include &quot;tiropp/fwd.hpp&quot;</code></p><h2 id=\"public-functions\"><a class=\"anchor-link\" href=\"#public-functions\">#</a>Public Functions</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-~native_type\">~native_type</a></strong>() =default</td></tr><tr><td>bool</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-valid\">valid</a></strong>() const<br/>Returns true is valid, i.e. if this <a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type\">native_type</a> has not been moved from.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type\">native_type</a> &amp;</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-operator=\">operator=</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type\">native_type</a> &amp;&amp; ) =default</td></tr><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-native_type\">native_type</a></strong>(std::string name)</td></tr><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-native_type\">native_type</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type\">native_type</a> &amp;&amp; ) =default</td></tr><tr><td>const std::string &amp;</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-name\">name</a></strong>() const<br/>Returns the native type&#x27;s name (the value of original constructor argument).</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native\">native</a></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-make\">make</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, T &amp;&amp; instance) const<br/>Constructs a new object of this type. The contents of <code>instance</code> will be moved into the constructed object.</td></tr><tr><td>bool</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-is_instance\">is_instance</a></strong>(const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1native\">native</a> &amp; object) const<br/>Returns true if the given native object is an instance of this type.</td></tr><tr><td>bool</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-is_destroyed\">is_destroyed</a></strong>(const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1native\">native</a> &amp; object) const<br/>Returns true if the referenced object was already destroyed manually by calling <code>[destroy()]()</code>.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-destroy\">destroy</a></strong>(const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1native\">native</a> &amp; object) const<br/>Manually destroys the native object.</td></tr><tr><td>T *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type#function-access\">access</a></strong>(const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1native\">native</a> &amp; object) const<br/>Returns the address of the native object instance.</td></tr></tbody></table><h2 id=\"detailed-description\"><a class=\"anchor-link\" href=\"#detailed-description\">#</a>Detailed Description</h2><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">template</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&lt;</span><span class=\"token keyword\" style=\"color:#e3116c\">typename</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(227, 98, 9)\">T</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#e3116c\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(227, 98, 9)\">tiro</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">:</span><span class=\"token base-clause operator\" style=\"color:rgb(0, 92, 197)\">:</span><span class=\"token base-clause class-name\" style=\"color:rgb(227, 98, 9)\">native_type</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">;</span></div></pre></div><h2 id=\"public-functions-documentation\"><a class=\"anchor-link\" href=\"#public-functions-documentation\">#</a>Public Functions Documentation</h2><h3 id=\"function-native_type\"><a class=\"anchor-link\" href=\"#function-native_type\">#</a>function ~native_type</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">~</span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">native_type</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token keyword\" style=\"color:#e3116c\">default</span></div></pre></div><h3 id=\"function-valid\"><a class=\"anchor-link\" href=\"#function-valid\">#</a>function valid</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">bool</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">valid</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns true is valid, i.e. if this <a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type\">native_type</a> has not been moved from. </p><h3 id=\"function-operator\"><a class=\"anchor-link\" href=\"#function-operator\">#</a>function operator=</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">native_type </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">operator</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    native_type </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> </span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token keyword\" style=\"color:#e3116c\">default</span></div></pre></div><h3 id=\"function-native_type-1\"><a class=\"anchor-link\" href=\"#function-native_type-1\">#</a>function native_type</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">explicit</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">native_type</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">string name</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-native_type-2\"><a class=\"anchor-link\" href=\"#function-native_type-2\">#</a>function native_type</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">native_type</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    native_type </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> </span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token keyword\" style=\"color:#e3116c\">default</span></div></pre></div><h3 id=\"function-name\"><a class=\"anchor-link\" href=\"#function-name\">#</a>function name</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">string </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns the native type&#x27;s name (the value of original constructor argument). </p><h3 id=\"function-make\"><a class=\"anchor-link\" href=\"#function-make\">#</a>function make</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> native </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    T </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> instance</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Constructs a new object of this type. The contents of <code>instance</code> will be moved into the constructed object. </p><h3 id=\"function-is_instance\"><a class=\"anchor-link\" href=\"#function-is_instance\">#</a>function is_instance</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">bool</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">is_instance</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> native </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> object</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns true if the given native object is an instance of this type. </p><h3 id=\"function-is_destroyed\"><a class=\"anchor-link\" href=\"#function-is_destroyed\">#</a>function is_destroyed</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">bool</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">is_destroyed</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> native </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> object</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns true if the referenced object was already destroyed manually by calling <code>[destroy()]()</code>. </p><h3 id=\"function-destroy\"><a class=\"anchor-link\" href=\"#function-destroy\">#</a>function destroy</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">destroy</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> native </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> object</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Manually destroys the native object. </p><p>Future <code>[access()](/docs/api/classes/classtiro_1_1native__type#function-access)</code> calls to the same object will fail with an exception. Note that objects are destroyed automatically when they are collected by the garbage collector. This function allows the programmer to trigger the destruction at an earlier point in time. </p><h3 id=\"function-access\"><a class=\"anchor-link\" href=\"#function-access\">#</a>function access</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> T </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">access</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> native </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> object</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns the address of the native object instance. </p><p>TODO: This API will have to change (or become more dangeous) once the gc starts to move objects around. </p><hr/><p>Updated on  5 May 2021 at 11:21:35 CEST</p>","scope":{}}},"__N_SSG":true}