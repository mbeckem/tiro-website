{"pageProps":{"slug":"libtiro/getting-started","frontMatter":{"title":"Getting started with libtiro","slug":"libtiro/getting-started"},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following instructions assume a reasonably up-to-date Linux or Unix system.\"), mdx(\"h2\", {\n    \"id\": \"building-from-source\"\n  }, \"Building from source\"), mdx(\"p\", null, \"As the first step, use git to clone the repository:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ git clone https://github.com/mbeckem/tiro.git\\n\")), mdx(\"h3\", {\n    \"id\": \"requirements\"\n  }, \"Requirements\"), mdx(\"p\", null, \"The following tools must be installed on your system to build tiro:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A C++17 compiler. The following compilers are tested regularly:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gcc 8, 9 (Linux )\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"clang 9, 10 (Linux)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"xcode 11 (OSX)\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"MSVC is currently not supported (minor adjustments are necessary to make tiro compile). clang-cl should work.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"CMake >= 3.13\"))), mdx(\"p\", null, \"No other external tools or libraries are needed.\\nLibrary dependencies needed by tiro (listed \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mbeckem/tiro#dependencies\"\n  }, \"here\"), \") will be fetched automatically during the build.\"), mdx(\"h3\", {\n    \"id\": \"building-and-installing\"\n  }, \"Building and installing\"), mdx(\"p\", null, \"Create a build directory, configure cmake and then run your build system.\"), mdx(\"p\", null, \"The following example performs a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"system wide\"), \" installation of tiro and assumes root privileges.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"You can chose a custom location by specifying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-DCMAKE_INSTALL_PREFIX=/your/install/prefix\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ mkdir build && cd build\\n$ cmake -DCMAKE_BUILD_TYPE=Release -DTIRO_LTO=1 ..\\n$ make -j8\\n$ make install\\n\")), mdx(\"p\", null, \"The following cmake variables can be useful to customize the build process:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CMake Variable\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_LTO = ON \", \"|\", \" OFF\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Optional (off by default). Attempts to enable link time optimization, if supported by the compiler. Results in smaller and more optimized output and is recommended in release builds.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_WARNINGS = ON \", \"|\", \" OFF\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Optional (off by default). Enables pedantic warnings, mainly used during development.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_TESTS= ON \", \"|\", \" OFF\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Optional (off by default). Also build test executables when enabled (placed into \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"build/bin\"), \").\")))), mdx(\"p\", null, \"After the build has completed, the compiled output can be found in your install prefix:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-plain\"\n  }, \"<install prefix>\\n|-- include\\n|   |-- tiro        # C headers for libtiro.so\\n|   `-- tiropp      # C++ headers for libtiro.so\\n`-- lib\\n    |-- cmake       # CMake support scripts\\n    `-- libtiro.so  # tiro as a shared library\\n\")), mdx(\"h3\", {\n    \"id\": \"create-a-simple-test-program\"\n  }, \"Create a simple test program\"), mdx(\"p\", null, \"Create a simple program that links against libtiro and prints its current version:\"), mdx(\"span\", {\n    className: \"caption\"\n  }, \"Example: hello.c\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"#include <tiro/version.h>\\n\\n#include <stdio.h>\\n\\nint main() {\\n    printf(\\\"Hello from %s\\\\n\\\", tiro_full_version());\\n}\\n\")), mdx(\"p\", null, \"Now compile and run your application. Make sure that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"libtiro.so\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiro/version.h\"), \" can be found by your compiler.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ gcc hello.c -o hello -ltiro\\n$ ./hello\\nHello from tiro 0.1.0-dev (git:ae107e2bc05173d8dfa49de21094252271de133a)\\n\")), mdx(\"h3\", {\n    \"id\": \"next-steps\"\n  }, \"Next steps\"), mdx(\"p\", null, \"More complex examples are maintained in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mbeckem/tiro/tree/master/examples\"\n  }, \"Github repository\"), \".\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mbeckem/tiro/tree/master/examples/embed_cpp\"\n  }, \"C++ embedding example\"), \" demonstrates how to use the C++ API in your application.\"), mdx(\"h3\", {\n    \"id\": \"further-documentation\"\n  }, \"Further documentation\"), mdx(\"p\", null, \"The full build system reference is maintained in the tiro source repository: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/mbeckem/tiro/blob/master/docs/building.md\"\n  }, \"Reference\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>The following instructions assume a reasonably up-to-date Linux or Unix system.</p><h2 id=\"building-from-source\">Building from source</h2><p>As the first step, use git to clone the repository:</p><div><pre class=\"prism-code language-bash\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">git</span><span class=\"token plain\"> clone https://github.com/mbeckem/tiro.git</span></div></pre></div><h3 id=\"requirements\">Requirements</h3><p>The following tools must be installed on your system to build tiro:</p><ul><li><p>A C++17 compiler. The following compilers are tested regularly:</p><ul><li>gcc 8, 9 (Linux )</li><li>clang 9, 10 (Linux)</li><li>xcode 11 (OSX)</li></ul><p>MSVC is currently not supported (minor adjustments are necessary to make tiro compile). clang-cl should work.</p></li><li><p>CMake &gt;= 3.13</p></li></ul><p>No other external tools or libraries are needed.\nLibrary dependencies needed by tiro (listed <a href=\"https://github.com/mbeckem/tiro#dependencies\" rel=\"noopener noreferrer\" target=\"_blank\"><span icon=\"share\" style=\"vertical-align:baseline;padding-right:4px\" class=\"bp3-icon bp3-icon-share\"><svg data-icon=\"share\" width=\"12\" height=\"12\" viewBox=\"0 0 16 16\"><desc>share</desc><path d=\"M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z\" fill-rule=\"evenodd\"></path></svg></span>here</a>) will be fetched automatically during the build.</p><h3 id=\"building-and-installing\">Building and installing</h3><p>Create a build directory, configure cmake and then run your build system.</p><p>The following example performs a <em>system wide</em> installation of tiro and assumes root privileges.<br/>\n<!-- -->You can chose a custom location by specifying <code>-DCMAKE_INSTALL_PREFIX=/your/install/prefix</code>.</p><div><pre class=\"prism-code language-bash\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">mkdir</span><span class=\"token plain\"> build </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\" style=\"color:rgb(227, 98, 9)\">cd</span><span class=\"token plain\"> build</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">$ cmake -DCMAKE_BUILD_TYPE</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token plain\">Release -DTIRO_LTO</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token number\">1</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">..</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make</span><span class=\"token plain\"> -j8</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">$ </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">install</span></div></pre></div><p>The following cmake variables can be useful to customize the build process:</p><table><thead><tr><th>CMake Variable</th><th>Description</th></tr></thead><tbody><tr><td>TIRO_LTO = ON <!-- -->|<!-- --> OFF</td><td>Optional (off by default). Attempts to enable link time optimization, if supported by the compiler. Results in smaller and more optimized output and is recommended in release builds.</td></tr><tr><td>TIRO_WARNINGS = ON <!-- -->|<!-- --> OFF</td><td>Optional (off by default). Enables pedantic warnings, mainly used during development.</td></tr><tr><td>TIRO_TESTS= ON <!-- -->|<!-- --> OFF</td><td>Optional (off by default). Also build test executables when enabled (placed into <code>build/bin</code>).</td></tr></tbody></table><p>After the build has completed, the compiled output can be found in your install prefix:</p><div><pre class=\"prism-code language-plain\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">&lt;install prefix&gt;</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">|-- include</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">|   |-- tiro        # C headers for libtiro.so</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">|   `-- tiropp      # C++ headers for libtiro.so</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">`-- lib</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    |-- cmake       # CMake support scripts</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    `-- libtiro.so  # tiro as a shared library</span></div></pre></div><h3 id=\"create-a-simple-test-program\">Create a simple test program</h3><p>Create a simple program that links against libtiro and prints its current version:</p><span class=\"caption\">Example: hello.c</span><div><pre class=\"prism-code language-c\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token macro property directive-hash\">#</span><span class=\"token macro property directive keyword\" style=\"color:#e3116c\">include</span><span class=\"token macro property\"> </span><span class=\"token macro property string\">&lt;tiro/version.h&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\" style=\"display:inline-block\">\n</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token macro property directive-hash\">#</span><span class=\"token macro property directive keyword\" style=\"color:#e3116c\">include</span><span class=\"token macro property\"> </span><span class=\"token macro property string\">&lt;stdio.h&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\" style=\"display:inline-block\">\n</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#e3116c\">int</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">main</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">printf</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token string\">&quot;Hello from %s\\n&quot;</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_full_version</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">}</span></div></pre></div><p>Now compile and run your application. Make sure that <code>libtiro.so</code> and <code>tiro/version.h</code> can be found by your compiler.</p><div><pre class=\"prism-code language-plain\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">$ gcc hello.c -o hello -ltiro</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">$ ./hello</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">Hello from tiro 0.1.0-dev (git:ae107e2bc05173d8dfa49de21094252271de133a)</span></div></pre></div><h3 id=\"next-steps\">Next steps</h3><p>More complex examples are maintained in the <a href=\"https://github.com/mbeckem/tiro/tree/master/examples\" rel=\"noopener noreferrer\" target=\"_blank\"><span icon=\"share\" style=\"vertical-align:baseline;padding-right:4px\" class=\"bp3-icon bp3-icon-share\"><svg data-icon=\"share\" width=\"12\" height=\"12\" viewBox=\"0 0 16 16\"><desc>share</desc><path d=\"M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z\" fill-rule=\"evenodd\"></path></svg></span>Github repository</a>.</p><p>The <a href=\"https://github.com/mbeckem/tiro/tree/master/examples/embed_cpp\" rel=\"noopener noreferrer\" target=\"_blank\"><span icon=\"share\" style=\"vertical-align:baseline;padding-right:4px\" class=\"bp3-icon bp3-icon-share\"><svg data-icon=\"share\" width=\"12\" height=\"12\" viewBox=\"0 0 16 16\"><desc>share</desc><path d=\"M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z\" fill-rule=\"evenodd\"></path></svg></span>C++ embedding example</a> demonstrates how to use the C++ API in your application.</p><h3 id=\"further-documentation\">Further documentation</h3><p>The full build system reference is maintained in the tiro source repository: <a href=\"https://github.com/mbeckem/tiro/blob/master/docs/building.md\" rel=\"noopener noreferrer\" target=\"_blank\"><span icon=\"share\" style=\"vertical-align:baseline;padding-right:4px\" class=\"bp3-icon bp3-icon-share\"><svg data-icon=\"share\" width=\"12\" height=\"12\" viewBox=\"0 0 16 16\"><desc>share</desc><path d=\"M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z\" fill-rule=\"evenodd\"></path></svg></span>Reference</a>.</p>","scope":{}}},"__N_SSG":true}