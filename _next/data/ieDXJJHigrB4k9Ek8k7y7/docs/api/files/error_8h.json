{"pageProps":{"slug":"files/error_8h","frontMatter":{"title":"tiro/error.h"},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiroerrorh\"\n  }, \"tiro/error.h\"), mdx(\"h2\", {\n    \"id\": \"types\"\n  }, \"Types\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"enum\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#enum-tiro_errc_t\"\n  }, \"tiro_errc_t\")), \" { TIRO_OK = 0, TIRO_ERROR_OUT_OF_BOUNDS = 9, TIRO_ERROR_MODULE_NOT_FOUND = 7, TIRO_ERROR_MODULE_EXISTS = 6, TIRO_ERROR_INTERNAL = 1000, TIRO_ERROR_EXPORT_NOT_FOUND = 8, TIRO_ERROR_BAD_TYPE = 4, TIRO_ERROR_BAD_STATE = 1, TIRO_ERROR_BAD_SOURCE = 3, TIRO_ERROR_BAD_KEY = 5, TIRO_ERROR_BAD_ARG = 2, TIRO_ERROR_ALLOC = 10}\", mdx(\"br\", null), \"Defines all possible error codes.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"typedef enum \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/error_8h#enum-tiro_errc_t\"\n  }, \"tiro_errc_t\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#typedef-tiro_errc_t\"\n  }, \"tiro_errc_t\")), \" \", mdx(\"br\", null), \"Defines all possible error codes.\")))), mdx(\"h2\", {\n    \"id\": \"functions\"\n  }, \"Functions\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#function-tiro_error_name\"\n  }, \"tiro_error_name\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" err)\", mdx(\"br\", null), \"Returns the name of the error code in the given error.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#function-tiro_error_message\"\n  }, \"tiro_error_message\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" err)\", mdx(\"br\", null), \"Returns the human readable message of the error code in the given error.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#function-tiro_error_free\"\n  }, \"tiro_error_free\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" err)\", mdx(\"br\", null), \"Frees the given error instance.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/error_8h#enum-tiro_errc_t\"\n  }, \"tiro_errc_t\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#function-tiro_error_errc\"\n  }, \"tiro_error_errc\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" err)\", mdx(\"br\", null), \"Returns the error code stored in the given error.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#function-tiro_error_details\"\n  }, \"tiro_error_details\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" err)\", mdx(\"br\", null), \"Returns detailed error information as a human readable string.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#function-tiro_errc_name\"\n  }, \"tiro_errc_name\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/error_8h#enum-tiro_errc_t\"\n  }, \"tiro_errc_t\"), \" e)\", mdx(\"br\", null), \"Returns the name of the given error code.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/error_8h#function-tiro_errc_message\"\n  }, \"tiro_errc_message\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/error_8h#enum-tiro_errc_t\"\n  }, \"tiro_errc_t\"), \" e)\", mdx(\"br\", null), \"Returns a human readable description of the given error code.\")))), mdx(\"h2\", {\n    \"id\": \"types-documentation\"\n  }, \"Types Documentation\"), mdx(\"h3\", {\n    \"id\": \"enum-tiro_errc_t\"\n  }, \"enum tiro_errc_t\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Enumerator\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Value\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_OK\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_OUT_OF_BOUNDS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"9\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Argument was out of bounds.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_MODULE_NOT_FOUND\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"7\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Requested module does not exist.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_MODULE_EXISTS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"6\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Module name defined more than once.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_INTERNAL\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1000\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Internal error.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_EXPORT_NOT_FOUND\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"8\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Requested export does not exist.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_TYPE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Operation not supported on type.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_STATE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instance is not in the correct state.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_SOURCE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Invalid source code.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_KEY\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"5\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Key does not exist on object.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_ARG\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Invalid argument.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_ALLOC\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"10\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Allocation failure.\")))), mdx(\"p\", null, \"Defines all possible error codes. \"), mdx(\"p\", null, \"TODO: Better numbering scheme \"), mdx(\"h3\", {\n    \"id\": \"typedef-tiro_errc_t\"\n  }, \"typedef tiro_errc_t\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"typedef enum tiro_errc_t tiro_errc_t;\\n\")), mdx(\"p\", null, \"Defines all possible error codes. \"), mdx(\"p\", null, \"TODO: Better numbering scheme \"), mdx(\"h2\", {\n    \"id\": \"functions-documentation\"\n  }, \"Functions Documentation\"), mdx(\"h3\", {\n    \"id\": \"function-tiro_error_name\"\n  }, \"function tiro_error_name\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"const char * tiro_error_name(\\n    tiro_error_t err\\n)\\n\")), mdx(\"p\", null, \"Returns the name of the error code in the given error. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_error_message\"\n  }, \"function tiro_error_message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"const char * tiro_error_message(\\n    tiro_error_t err\\n)\\n\")), mdx(\"p\", null, \"Returns the human readable message of the error code in the given error. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_error_free\"\n  }, \"function tiro_error_free\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_error_free(\\n    tiro_error_t err\\n)\\n\")), mdx(\"p\", null, \"Frees the given error instance. \"), mdx(\"p\", null, \"Does nothing if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"err\"), \" is NULL. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_error_errc\"\n  }, \"function tiro_error_errc\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"tiro_errc_t tiro_error_errc(\\n    tiro_error_t err\\n)\\n\")), mdx(\"p\", null, \"Returns the error code stored in the given error. \"), mdx(\"p\", null, \"Returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TIRO_OK\"), \" if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"err\"), \" is NULL. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_error_details\"\n  }, \"function tiro_error_details\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"const char * tiro_error_details(\\n    tiro_error_t err\\n)\\n\")), mdx(\"p\", null, \"Returns detailed error information as a human readable string. \"), mdx(\"p\", null, \"The string will never be null, but it may be empty if detailed information are not available.\"), mdx(\"p\", null, \"The returned string is managed by the error and will remain valid for as long as the error is not modified or freed. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_errc_name\"\n  }, \"function tiro_errc_name\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"const char * tiro_errc_name(\\n    tiro_errc_t e\\n)\\n\")), mdx(\"p\", null, \"Returns the name of the given error code. \"), mdx(\"p\", null, \"The string points into static storage and must not be freed. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_errc_message\"\n  }, \"function tiro_errc_message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"const char * tiro_errc_message(\\n    tiro_errc_t e\\n)\\n\")), mdx(\"p\", null, \"Returns a human readable description of the given error code. \"), mdx(\"p\", null, \"The string points into static storage and must not be freed. \"), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on 11 April 2021 at 12:05:10 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tiroerrorh\">tiro/error.h</h1><h2 id=\"types\">Types</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>enum</td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#enum-tiro_errc_t\">tiro_errc_t</a></strong> { TIRO_OK = 0, TIRO_ERROR_OUT_OF_BOUNDS = 9, TIRO_ERROR_MODULE_NOT_FOUND = 7, TIRO_ERROR_MODULE_EXISTS = 6, TIRO_ERROR_INTERNAL = 1000, TIRO_ERROR_EXPORT_NOT_FOUND = 8, TIRO_ERROR_BAD_TYPE = 4, TIRO_ERROR_BAD_STATE = 1, TIRO_ERROR_BAD_SOURCE = 3, TIRO_ERROR_BAD_KEY = 5, TIRO_ERROR_BAD_ARG = 2, TIRO_ERROR_ALLOC = 10}<br/>Defines all possible error codes.</td></tr><tr><td>typedef enum <a href=\"/tiro-website/docs/api/files/error_8h#enum-tiro_errc_t\">tiro_errc_t</a></td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#typedef-tiro_errc_t\">tiro_errc_t</a></strong> <br/>Defines all possible error codes.</td></tr></tbody></table><h2 id=\"functions\">Functions</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#function-tiro_error_name\">tiro_error_name</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> err)<br/>Returns the name of the error code in the given error.</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#function-tiro_error_message\">tiro_error_message</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> err)<br/>Returns the human readable message of the error code in the given error.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#function-tiro_error_free\">tiro_error_free</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> err)<br/>Frees the given error instance.</td></tr><tr><td><a href=\"/tiro-website/docs/api/files/error_8h#enum-tiro_errc_t\">tiro_errc_t</a></td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#function-tiro_error_errc\">tiro_error_errc</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> err)<br/>Returns the error code stored in the given error.</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#function-tiro_error_details\">tiro_error_details</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> err)<br/>Returns detailed error information as a human readable string.</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#function-tiro_errc_name\">tiro_errc_name</a></strong>(<a href=\"/tiro-website/docs/api/files/error_8h#enum-tiro_errc_t\">tiro_errc_t</a> e)<br/>Returns the name of the given error code.</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/files/error_8h#function-tiro_errc_message\">tiro_errc_message</a></strong>(<a href=\"/tiro-website/docs/api/files/error_8h#enum-tiro_errc_t\">tiro_errc_t</a> e)<br/>Returns a human readable description of the given error code.</td></tr></tbody></table><h2 id=\"types-documentation\">Types Documentation</h2><h3 id=\"enum-tiro_errc_t\">enum tiro_errc_t</h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>TIRO_OK</td><td>0</td><td></td></tr><tr><td>TIRO_ERROR_OUT_OF_BOUNDS</td><td>9</td><td>Argument was out of bounds.</td></tr><tr><td>TIRO_ERROR_MODULE_NOT_FOUND</td><td>7</td><td>Requested module does not exist.</td></tr><tr><td>TIRO_ERROR_MODULE_EXISTS</td><td>6</td><td>Module name defined more than once.</td></tr><tr><td>TIRO_ERROR_INTERNAL</td><td>1000</td><td>Internal error.</td></tr><tr><td>TIRO_ERROR_EXPORT_NOT_FOUND</td><td>8</td><td>Requested export does not exist.</td></tr><tr><td>TIRO_ERROR_BAD_TYPE</td><td>4</td><td>Operation not supported on type.</td></tr><tr><td>TIRO_ERROR_BAD_STATE</td><td>1</td><td>Instance is not in the correct state.</td></tr><tr><td>TIRO_ERROR_BAD_SOURCE</td><td>3</td><td>Invalid source code.</td></tr><tr><td>TIRO_ERROR_BAD_KEY</td><td>5</td><td>Key does not exist on object.</td></tr><tr><td>TIRO_ERROR_BAD_ARG</td><td>2</td><td>Invalid argument.</td></tr><tr><td>TIRO_ERROR_ALLOC</td><td>10</td><td>Allocation failure.</td></tr></tbody></table><p>Defines all possible error codes. </p><p>TODO: Better numbering scheme </p><h3 id=\"typedef-tiro_errc_t\">typedef tiro_errc_t</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">typedef</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">enum</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(227, 98, 9)\">tiro_errc_t</span><span class=\"token plain\"> tiro_errc_t</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">;</span></div></pre></div><p>Defines all possible error codes. </p><p>TODO: Better numbering scheme </p><h2 id=\"functions-documentation\">Functions Documentation</h2><h3 id=\"function-tiro_error_name\">function tiro_error_name</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_error_name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the name of the error code in the given error. </p><h3 id=\"function-tiro_error_message\">function tiro_error_message</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_error_message</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the human readable message of the error code in the given error. </p><h3 id=\"function-tiro_error_free\">function tiro_error_free</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_error_free</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Frees the given error instance. </p><p>Does nothing if <code>err</code> is NULL. </p><h3 id=\"function-tiro_error_errc\">function tiro_error_errc</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">tiro_errc_t </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_error_errc</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the error code stored in the given error. </p><p>Returns <code>TIRO_OK</code> if <code>err</code> is NULL. </p><h3 id=\"function-tiro_error_details\">function tiro_error_details</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_error_details</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns detailed error information as a human readable string. </p><p>The string will never be null, but it may be empty if detailed information are not available.</p><p>The returned string is managed by the error and will remain valid for as long as the error is not modified or freed. </p><h3 id=\"function-tiro_errc_name\">function tiro_errc_name</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_errc_name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_errc_t e</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the name of the given error code. </p><p>The string points into static storage and must not be freed. </p><h3 id=\"function-tiro_errc_message\">function tiro_errc_message</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_errc_message</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_errc_t e</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns a human readable description of the given error code. </p><p>The string points into static storage and must not be freed. </p><hr/><p>Updated on 11 April 2021 at 12:05:10 CEST</p>","scope":{}}},"__N_SSG":true}