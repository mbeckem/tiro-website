{"pageProps":{"slug":"classes/classtiro_1_1compiler","frontMatter":{"title":"tiro::compiler","summary":"Translates a set of source files into a module."},"mdx":{"compiledSource":"var d=Object.defineProperty,m=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var p=(t,a,n)=>a in t?d(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,e=(t,a)=>{for(var n in a||(a={}))i.call(a,n)&&p(t,n,a[n]);if(o)for(var n of o(a))l.call(a,n)&&p(t,n,a[n]);return t},s=(t,a)=>m(t,u(a));var c=(t,a)=>{var n={};for(var r in t)i.call(t,r)&&a.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&o)for(var r of o(t))a.indexOf(r)<0&&l.call(t,r)&&(n[r]=t[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:t}=r,a=c(r,[\"components\"]);return mdx(MDXLayout,s(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",e({},{id:\"tirocompiler\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"anchor-link\",href:\"#tirocompiler\"}),\"\\xA7\"),\"tiro::compiler\"),mdx(\"p\",null,\"Translates a set of source files into a module. \"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},'#include \"tiropp/compiler.hpp\"')),mdx(\"h2\",e({},{id:\"public-functions\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"anchor-link\",href:\"#public-functions\"}),\"\\xA7\"),\"Public Functions\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null})),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null})),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-compiler\"}),\"compiler\")),\"(std::string\",\"_\",\"view module_name)\",mdx(\"br\",null),\"Constructs a new compiler instance for a module with the given name.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null})),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-compiler\"}),\"compiler\")),\"(std::string\",\"_\",\"view module_name, \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/classes/structtiro_1_1compiler__settings\"}),\"compiler\",\"_\",\"settings\"),\" settings)\",mdx(\"br\",null),\"Constructs a new compiler instance for a module with the given name and the given settings.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null})),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-compiler\"}),\"compiler\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro-compiler-t\"}),\"tiro\",\"_\",\"compiler\",\"_\",\"t\"),\" raw_compiler)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-add-file\"}),\"add_file\")),\"(std::string\",\"_\",\"view file_name, std::string\",\"_\",\"view file_content)\",mdx(\"br\",null),\"Add a source file to the compiler's source set.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-run\"}),\"run\")),\"()\",mdx(\"br\",null),\"Run the compiler on the set of source files provided via \",mdx(\"inlineCode\",{parentName:\"td\"},\"add_file\"),\".\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"bool\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-has-module\"}),\"has_module\")),\"() const\",mdx(\"br\",null),\"Returns true if the compiler has successfully compiled a bytecode module.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1compiled__module\"}),\"compiled_module\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-take-module\"}),\"take_module\")),\"()\",mdx(\"br\",null),\"Extracts the compiled module from the compiler and returns it.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"std::string\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-dump-cst\"}),\"dump_cst\")),\"() const\",mdx(\"br\",null),\"Returns a dump of the compiler's concrete syntax tree.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"std::string\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-dump-ast\"}),\"dump_ast\")),\"() const\",mdx(\"br\",null),\"Returns a dump of the compiler's abstract syntax tree.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"std::string\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-dump-ir\"}),\"dump_ir\")),\"() const\",mdx(\"br\",null),\"Returns a dump of the compiler's internal representation.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"std::string\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-dump-bytecode\"}),\"dump_bytecode\")),\"() const\",mdx(\"br\",null),\"Returns a dump of the disassembled bytecode.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro-compiler-t\"}),\"tiro_compiler_t\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-raw-compiler\"}),\"raw_compiler\")),\"() const\")))),mdx(\"h2\",e({},{id:\"public-functions-documentation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"anchor-link\",href:\"#public-functions-documentation\"}),\"\\xA7\"),\"Public Functions Documentation\"),mdx(\"h3\",e({},{id:\"function-compiler\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-compiler\"}),\"\\xA7\"),\"function compiler\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline explicit compiler(\n    std::string_view module_name\n)\n`)),mdx(\"p\",null,\"Constructs a new compiler instance for a module with the given name. \"),mdx(\"h3\",e({},{id:\"function-compiler-1\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-compiler-1\"}),\"\\xA7\"),\"function compiler\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline explicit compiler(\n    std::string_view module_name,\n    compiler_settings settings\n)\n`)),mdx(\"p\",null,\"Constructs a new compiler instance for a module with the given name and the given settings. \"),mdx(\"h3\",e({},{id:\"function-compiler-2\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-compiler-2\"}),\"\\xA7\"),\"function compiler\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline explicit compiler(\n    tiro_compiler_t raw_compiler\n)\n`)),mdx(\"h3\",e({},{id:\"function-add-file\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-add-file\"}),\"\\xA7\"),\"function add_file\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline void add_file(\n    std::string_view file_name,\n    std::string_view file_content\n)\n`)),mdx(\"p\",null,\"Add a source file to the compiler's source set. \"),mdx(\"p\",null,\"Can only be called before compilation started.\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"file_name\"),\" should be unique in the current source set. \"),mdx(\"h3\",e({},{id:\"function-run\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-run\"}),\"\\xA7\"),\"function run\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline void run()\n`)),mdx(\"p\",null,\"Run the compiler on the set of source files provided via \",mdx(\"inlineCode\",{parentName:\"p\"},\"add_file\"),\". \"),mdx(\"p\",null,\"Requires at least one source file. This function can only be called once for every compiler instance. \"),mdx(\"h3\",e({},{id:\"function-has-module\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-has-module\"}),\"\\xA7\"),\"function has_module\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline bool has_module() const\n`)),mdx(\"p\",null,\"Returns true if the compiler has successfully compiled a bytecode module. \"),mdx(\"h3\",e({},{id:\"function-take-module\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-take-module\"}),\"\\xA7\"),\"function take_module\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline compiled_module take_module()\n`)),mdx(\"p\",null,\"Extracts the compiled module from the compiler and returns it. \"),mdx(\"p\",null,\"For this to work, \",mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-run\"}),\"run()\"),\" must have completed successfully. \"),mdx(\"h3\",e({},{id:\"function-dump-cst\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-dump-cst\"}),\"\\xA7\"),\"function dump_cst\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline std::string dump_cst() const\n`)),mdx(\"p\",null,\"Returns a dump of the compiler's concrete syntax tree. \"),mdx(\"p\",null,\"Can only be called after a call to \",mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-run\"}),\"run()\"),\", and only if the \",mdx(\"inlineCode\",{parentName:\"p\"},\"enable_dump_cst\"),\" option was set to true. \"),mdx(\"h3\",e({},{id:\"function-dump-ast\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-dump-ast\"}),\"\\xA7\"),\"function dump_ast\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline std::string dump_ast() const\n`)),mdx(\"p\",null,\"Returns a dump of the compiler's abstract syntax tree. \"),mdx(\"p\",null,\"Can only be called after a call to \",mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-run\"}),\"run()\"),\", and only if the \",mdx(\"inlineCode\",{parentName:\"p\"},\"enable_dump_ast\"),\" option was set to true. \"),mdx(\"h3\",e({},{id:\"function-dump-ir\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-dump-ir\"}),\"\\xA7\"),\"function dump_ir\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline std::string dump_ir() const\n`)),mdx(\"p\",null,\"Returns a dump of the compiler's internal representation. \"),mdx(\"p\",null,\"Can only be called after a call to \",mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-run\"}),\"run()\"),\", and only if the \",mdx(\"inlineCode\",{parentName:\"p\"},\"enable_dump_ir\"),\" option was set to true. \"),mdx(\"h3\",e({},{id:\"function-dump-bytecode\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-dump-bytecode\"}),\"\\xA7\"),\"function dump_bytecode\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline std::string dump_bytecode() const\n`)),mdx(\"p\",null,\"Returns a dump of the disassembled bytecode. \"),mdx(\"p\",null,\"Can only be called after a call to \",mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1compiler#function-run\"}),\"run()\"),\", and only if the \",mdx(\"inlineCode\",{parentName:\"p\"},\"enable_bytecode\"),\" option was set to true. \"),mdx(\"h3\",e({},{id:\"function-raw-compiler\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-raw-compiler\"}),\"\\xA7\"),\"function raw_compiler\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`inline tiro_compiler_t raw_compiler() const\n`)),mdx(\"hr\",null),mdx(\"p\",null,\"Updated on 2022-02-06 at 18:52:25 +0100\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}