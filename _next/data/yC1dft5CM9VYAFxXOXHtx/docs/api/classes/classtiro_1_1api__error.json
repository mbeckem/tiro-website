{"pageProps":{"slug":"classes/classtiro_1_1api__error","frontMatter":{"title":"tiro::api_error","summary":"Represents an error thrown by the tiro c library."},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiroapi_error\"\n  }, \"tiro::api_error\"), mdx(\"p\", null, \"Represents an error thrown by the tiro c library.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#include \\\"tiropp/error.hpp\\\"\")), mdx(\"p\", null, \"Inherits from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error\"\n  }, \"error\"), \", exception\"), mdx(\"h2\", {\n    \"id\": \"public-functions\"\n  }, \"Public Functions\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error#function-what\"\n  }, \"what\")), \"() const override\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error#function-raw_error\"\n  }, \"raw_error\")), \"() const\", mdx(\"br\", null), \"Returns the wrapped tiro_error_t instance.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error#function-name\"\n  }, \"name\")), \"() const\", mdx(\"br\", null), \"Returns the name of the error (never null).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"virtual const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error#function-message\"\n  }, \"message\")), \"() const override\", mdx(\"br\", null), \"Returns the human readable error message (never null).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"virtual const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error#function-details\"\n  }, \"details\")), \"() const override\", mdx(\"br\", null), \"Returns detailed error information (may be the empty string, but never null).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-api_errc\"\n  }, \"api_errc\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error#function-code\"\n  }, \"code\")), \"() const\", mdx(\"br\", null), \"Returns the error code represented by this error.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error#function-api_error\"\n  }, \"api_error\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" raw_error)\", mdx(\"br\", null), \"Constructs a new error from the given raw error.\")))), mdx(\"h2\", {\n    \"id\": \"public-functions-documentation\"\n  }, \"Public Functions Documentation\"), mdx(\"h3\", {\n    \"id\": \"function-what\"\n  }, \"function what\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const char * what() const override\\n\")), mdx(\"h3\", {\n    \"id\": \"function-raw_error\"\n  }, \"function raw_error\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline tiro_error_t raw_error() const\\n\")), mdx(\"p\", null, \"Returns the wrapped tiro_error_t instance. \"), mdx(\"h3\", {\n    \"id\": \"function-name\"\n  }, \"function name\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const char * name() const\\n\")), mdx(\"p\", null, \"Returns the name of the error (never null). \"), mdx(\"h3\", {\n    \"id\": \"function-message\"\n  }, \"function message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline virtual const char * message() const override\\n\")), mdx(\"p\", null, \"Returns the human readable error message (never null). \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reimplements\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error#function-message\"\n  }, \"tiro::error::message\")), mdx(\"h3\", {\n    \"id\": \"function-details\"\n  }, \"function details\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline virtual const char * details() const override\\n\")), mdx(\"p\", null, \"Returns detailed error information (may be the empty string, but never null). \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reimplements\"), \": \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error#function-details\"\n  }, \"tiro::error::details\")), mdx(\"h3\", {\n    \"id\": \"function-code\"\n  }, \"function code\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline api_errc code() const\\n\")), mdx(\"p\", null, \"Returns the error code represented by this error. \"), mdx(\"h3\", {\n    \"id\": \"function-api_error\"\n  }, \"function api_error\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline explicit api_error(\\n    tiro_error_t raw_error\\n)\\n\")), mdx(\"p\", null, \"Constructs a new error from the given raw error. \"), mdx(\"p\", null, \"The error takes ownership of the raw error. \"), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on 11 April 2021 at 12:05:10 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tiroapi_error\">tiro::api_error</h1><p>Represents an error thrown by the tiro c library.\n<code>#include &quot;tiropp/error.hpp&quot;</code></p><p>Inherits from <a href=\"/tiro-website/docs/api/classes/classtiro_1_1error\">error</a>, exception</p><h2 id=\"public-functions\">Public Functions</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error#function-what\">what</a></strong>() const override</td></tr><tr><td><a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error#function-raw_error\">raw_error</a></strong>() const<br/>Returns the wrapped tiro_error_t instance.</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error#function-name\">name</a></strong>() const<br/>Returns the name of the error (never null).</td></tr><tr><td>virtual const char *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error#function-message\">message</a></strong>() const override<br/>Returns the human readable error message (never null).</td></tr><tr><td>virtual const char *</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error#function-details\">details</a></strong>() const override<br/>Returns detailed error information (may be the empty string, but never null).</td></tr><tr><td><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-api_errc\">api_errc</a></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error#function-code\">code</a></strong>() const<br/>Returns the error code represented by this error.</td></tr><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error#function-api_error\">api_error</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> raw_error)<br/>Constructs a new error from the given raw error.</td></tr></tbody></table><h2 id=\"public-functions-documentation\">Public Functions Documentation</h2><h3 id=\"function-what\">function what</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">what</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> override</span></div></pre></div><h3 id=\"function-raw_error\">function raw_error</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> tiro_error_t </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">raw_error</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns the wrapped tiro_error_t instance. </p><h3 id=\"function-name\">function name</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns the name of the error (never null). </p><h3 id=\"function-message\">function message</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">virtual</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">message</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> override</span></div></pre></div><p>Returns the human readable error message (never null). </p><p><strong>Reimplements</strong>: <a href=\"/tiro-website/docs/api/classes/classtiro_1_1error#function-message\">tiro::error::message</a></p><h3 id=\"function-details\">function details</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">virtual</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">details</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> override</span></div></pre></div><p>Returns detailed error information (may be the empty string, but never null). </p><p><strong>Reimplements</strong>: <a href=\"/tiro-website/docs/api/classes/classtiro_1_1error#function-details\">tiro::error::details</a></p><h3 id=\"function-code\">function code</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> api_errc </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">code</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns the error code represented by this error. </p><h3 id=\"function-api_error\">function api_error</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">explicit</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">api_error</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t raw_error</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new error from the given raw error. </p><p>The error takes ownership of the raw error. </p><hr/><p>Updated on 11 April 2021 at 12:05:10 CEST</p>","scope":{}}},"__N_SSG":true}