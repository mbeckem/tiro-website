{"pageProps":{"slug":"namespaces/namespacetiro","frontMatter":{"title":"tiro"},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiro\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#tiro\"\n  }, \"#\"), \"tiro\"), mdx(\"h2\", {\n    \"id\": \"namespaces\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#namespaces\"\n  }, \"#\"), \"Namespaces\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro_1_1detail\"\n  }, \"tiro::detail\")))))), mdx(\"h2\", {\n    \"id\": \"classes\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#classes\"\n  }, \"#\"), \"Classes\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"struct\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/structtiro_1_1vm__settings\"\n  }, \"tiro::vm_settings\")), \" \", mdx(\"br\", null), \"Settings to control the construction of a virtual machine.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"tiro::vm\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"struct\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/structtiro_1_1version\"\n  }, \"tiro::version\")), \" \", mdx(\"br\", null), \"Represents a library version.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1type\"\n  }, \"tiro::type\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1tuple\"\n  }, \"tiro::tuple\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1sync__frame\"\n  }, \"tiro::sync_frame\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1string\"\n  }, \"tiro::string\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1result\"\n  }, \"tiro::result\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1record\"\n  }, \"tiro::record\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1null\"\n  }, \"tiro::null\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native__type\"\n  }, \"tiro::native_type\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1native\"\n  }, \"tiro::native\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1module\"\n  }, \"tiro::module\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1integer\"\n  }, \"tiro::integer\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"tiro::handle\")), \" \", mdx(\"br\", null), \"A handle represents a reference to an object.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1generic__error\"\n  }, \"tiro::generic_error\")), \" \", mdx(\"br\", null), \"Generic error with a simple message.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1function\"\n  }, \"tiro::function\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1float__\"\n  }, \"tiro::float_\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error__adapter\"\n  }, \"tiro::error_adapter\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1error\"\n  }, \"tiro::error\")), \" \", mdx(\"br\", null), \"Base class for all errors thrown by this library.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1coroutine\"\n  }, \"tiro::coroutine\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"struct\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/structtiro_1_1compiler__settings\"\n  }, \"tiro::compiler_settings\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1compiler\"\n  }, \"tiro::compiler\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1compiled__module\"\n  }, \"tiro::compiled_module\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1boolean\"\n  }, \"tiro::boolean\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1bad__handle__check\"\n  }, \"tiro::bad_handle_check\")), \" \", mdx(\"br\", null), \"Thrown when a debug mode handle check failed.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1bad__handle__cast\"\n  }, \"tiro::bad_handle_cast\")), \" \", mdx(\"br\", null), \"Thrown when an invalid cast is attempted.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1async__frame\"\n  }, \"tiro::async_frame\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1array\"\n  }, \"tiro::array\")))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"class\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1api__error\"\n  }, \"tiro::api_error\")), \" \", mdx(\"br\", null), \"Represents an error thrown by the tiro c library.\")))), mdx(\"h2\", {\n    \"id\": \"types\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#types\"\n  }, \"#\"), \"Types\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"enum int\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-value_kind\"\n  }, \"value_kind\")), \" { type = TIRO\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \"KIND_TYPE, tuple = TIRO_KIND_TUPLE, string = TIRO_KIND_STRING, result = TIRO_KIND_RESULT, record = TIRO_KIND_RECORD, null = TIRO_KIND_NULL, native = TIRO_KIND_NATIVE, module = TIRO_KIND_MODULE, invalid = TIRO_KIND_INVALID, internal = TIRO_KIND_INTERNAL, integer = TIRO_KIND_INTEGER, function = TIRO_KIND_FUNCTION, float\"), \" = TIRO_KIND_FLOAT, coroutine = TIRO_KIND_COROUTINE, boolean = TIRO_KIND_BOOLEAN, array = TIRO_KIND_ARRAY}\", mdx(\"br\", null), \"Represents the kind of a value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"enum int\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-severity\"\n  }, \"severity\")), \" { warning = TIRO_SEVERITY_WARNING, error = TIRO_SEVERITY_ERROR}\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"enum int\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-api_errc\"\n  }, \"api_errc\")), \" { out_of_bounds = TIRO_ERROR_OUT_OF_BOUNDS, ok = TIRO_OK, module_not_found = TIRO_ERROR_MODULE_NOT_FOUND, module_exists = TIRO_ERROR_MODULE_EXISTS, internal = TIRO_ERROR_INTERNAL, export_not_found = TIRO_ERROR_EXPORT_NOT_FOUND, bad_type = TIRO_ERROR_BAD_TYPE, bad_state = TIRO_ERROR_BAD_STATE, bad_source = TIRO_ERROR_BAD_SOURCE, bad_key = TIRO_ERROR_BAD_KEY, bad_arg = TIRO_ERROR_BAD_ARG, alloc = TIRO_ERROR_ALLOC}\")))), mdx(\"h2\", {\n    \"id\": \"functions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#functions\"\n  }, \"#\"), \"Functions\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-to_string\"\n  }, \"to_string\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-severity\"\n  }, \"severity\"), \" s)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-to_string\"\n  }, \"to_string\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-value_kind\"\n  }, \"value_kind\"), \" k)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/structtiro_1_1version\"\n  }, \"version\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-runtime_version\"\n  }, \"runtime_version\")), \"()\", mdx(\"br\", null), \"Returns the runtime version of the tiro library, i.e.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"template <typename Callback \", \">\", \" \", mdx(\"br\", null), \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-run_async\"\n  }, \"run_async\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1function\"\n  }, \"function\"), \" & func, Callback && cb)\", mdx(\"br\", null), \"Schedules execution of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"func\"), \" in a new coroutine without any arguments.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"template <typename Callback \", \">\", \" \", mdx(\"br\", null), \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-run_async\"\n  }, \"run_async\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1function\"\n  }, \"function\"), \" & func, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\"), \" & args, Callback && cb)\", mdx(\"br\", null), \"Schedules execution of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"func\"), \" in a new coroutine, with the provided arguments.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-name\"\n  }, \"name\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-api_errc\"\n  }, \"api_errc\"), \" e)\", mdx(\"br\", null), \"Returns the name of the given error code.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const char *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-message\"\n  }, \"message\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#enum-api_errc\"\n  }, \"api_errc\"), \" e)\", mdx(\"br\", null), \"Returns the human readable message associated with the error code.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1tuple\"\n  }, \"tuple\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_tuple\"\n  }, \"make_tuple\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, size_t size)\", mdx(\"br\", null), \"Constructs a new tuple value with the given size.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"template <auto Function\", \">\", \" \", mdx(\"br\", null), mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1function\"\n  }, \"function\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_sync_function\"\n  }, \"make_sync_function\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1string\"\n  }, \"string\"), \" & name, size_t argc, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\"), \" & closure)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1result\"\n  }, \"result\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_success\"\n  }, \"make_success\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\"), \" & value)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1string\"\n  }, \"string\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_string\"\n  }, \"make_string\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, std::string_view value)\", mdx(\"br\", null), \"Constructs a new string value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1record\"\n  }, \"record\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_record\"\n  }, \"make_record\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1array\"\n  }, \"array\"), \" & keys)\", mdx(\"br\", null), \"Constructs a new record with the given keys.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1null\"\n  }, \"null\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_null\"\n  }, \"make_null\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v)\", mdx(\"br\", null), \"Constructs a new handle, initialized to null.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1module\"\n  }, \"module\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_module\"\n  }, \"make_module\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const char * name, const std::vector< std::pair< std::string, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\"), \" >> & exports)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1integer\"\n  }, \"integer\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_integer\"\n  }, \"make_integer\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, int64_t value)\", mdx(\"br\", null), \"Constructs a new integer value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1float__\"\n  }, \"float_\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_float\"\n  }, \"make_float\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, double value)\", mdx(\"br\", null), \"Constructs a new float value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1result\"\n  }, \"result\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_failure\"\n  }, \"make_failure\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\"), \" & reason)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1coroutine\"\n  }, \"coroutine\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_coroutine\"\n  }, \"make_coroutine\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1function\"\n  }, \"function\"), \" & func, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\"), \" & arguments)\", mdx(\"br\", null), \"Constructs a new coroutine value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1coroutine\"\n  }, \"coroutine\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_coroutine\"\n  }, \"make_coroutine\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1function\"\n  }, \"function\"), \" & func)\", mdx(\"br\", null), \"Constructs a new coroutine value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_copy\"\n  }, \"make_copy\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\"), \" value)\", mdx(\"br\", null), \"Constructs a new handle as a copy of the given value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1boolean\"\n  }, \"boolean\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_boolean\"\n  }, \"make_boolean\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, bool value)\", mdx(\"br\", null), \"Constructs a new boolean value.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"template <auto Function\", \">\", \" \", mdx(\"br\", null), mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1function\"\n  }, \"function\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_async_function\"\n  }, \"make_async_function\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1string\"\n  }, \"string\"), \" & name, size_t argc, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\"), \" & closure)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1array\"\n  }, \"array\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-make_array\"\n  }, \"make_array\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, size_t initial_capacity =0)\", mdx(\"br\", null), \"Constructs a new array with the given initial capacity. The array will be empty.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-load_module\"\n  }, \"load_module\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1module\"\n  }, \"module\"), \" & m)\", mdx(\"br\", null), \"Attempts to load the given module into the virtual machine.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1handle\"\n  }, \"handle\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-get_export\"\n  }, \"get_export\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" & v, const char \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \" module_name, const char \"), \" export_name)\", mdx(\"br\", null), \"Attempts to find an exported value called \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"export_name\"), \" in the module \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"module_name\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"constexpr \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/structtiro_1_1version\"\n  }, \"version\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/namespaces/namespacetiro#function-compile_time_version\"\n  }, \"compile_time_version\")), \"()\", mdx(\"br\", null), \"Returns the compile time version of the tiro library, i.e.\")))), mdx(\"h2\", {\n    \"id\": \"types-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#types-documentation\"\n  }, \"#\"), \"Types Documentation\"), mdx(\"h3\", {\n    \"id\": \"enum-value_kind\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#enum-value_kind\"\n  }, \"#\"), \"enum value_kind\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Enumerator\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Value\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_TYPE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"tuple\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_TUPLE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_STRING\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"result\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_RESULT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"record\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_RECORD\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"null\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_NULL\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"native\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_NATIVE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"module\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_MODULE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"invalid\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_INVALID\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"internal\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_INTERNAL\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"integer\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_INTEGER\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"function\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_FUNCTION\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"float_\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_FLOAT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"coroutine\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_COROUTINE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_BOOLEAN\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"array\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_KIND_ARRAY\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"p\", null, \"Represents the kind of a value. \"), mdx(\"h3\", {\n    \"id\": \"enum-severity\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#enum-severity\"\n  }, \"#\"), \"enum severity\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Enumerator\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Value\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"warning\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_SEVERITY_WARNING\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"error\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_SEVERITY_ERROR\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"h3\", {\n    \"id\": \"enum-api_errc\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#enum-api_errc\"\n  }, \"#\"), \"enum api_errc\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Enumerator\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Value\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"out_of_bounds\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_OUT_OF_BOUNDS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ok\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_OK\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"module_not_found\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_MODULE_NOT_FOUND\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"module_exists\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_MODULE_EXISTS\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"internal\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_INTERNAL\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"export_not_found\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_EXPORT_NOT_FOUND\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bad_type\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_TYPE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bad_state\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_STATE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bad_source\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_SOURCE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bad_key\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_KEY\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bad_arg\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_BAD_ARG\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"alloc\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"TIRO_ERROR_ALLOC\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"h2\", {\n    \"id\": \"functions-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#functions-documentation\"\n  }, \"#\"), \"Functions Documentation\"), mdx(\"h3\", {\n    \"id\": \"function-to_string\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-to_string\"\n  }, \"#\"), \"function to_string\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const char * to_string(\\n    severity s\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-to_string-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-to_string-1\"\n  }, \"#\"), \"function to_string\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const char * to_string(\\n    value_kind k\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-runtime_version\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-runtime_version\"\n  }, \"#\"), \"function runtime_version\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline version runtime_version()\\n\")), mdx(\"p\", null, \"Returns the runtime version of the tiro library, i.e. \"), mdx(\"p\", null, \"the version the application is currently running against. \"), mdx(\"h3\", {\n    \"id\": \"function-run_async\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-run_async\"\n  }, \"#\"), \"function run_async\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"template <typename Callback >\\ninline void run_async(\\n    vm & v,\\n    const function & func,\\n    Callback && cb\\n)\\n\")), mdx(\"p\", null, \"Schedules execution of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"func\"), \" in a new coroutine without any arguments. \"), mdx(\"p\", null, \"The callback \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cb\"), \" will be called once \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"func\"), \" has completed its execution. Note that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"func\"), \" will not be executed from within this function (the next call to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[vm.run_ready()](/docs/api/classes/classtiro_1_1vm#function-run_ready)\"), \" will do that). TODO: Extract the result() from the coroutine and pass it directly to the callback. \"), mdx(\"h3\", {\n    \"id\": \"function-run_async-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-run_async-1\"\n  }, \"#\"), \"function run_async\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"template <typename Callback >\\ninline void run_async(\\n    vm & v,\\n    const function & func,\\n    const handle & args,\\n    Callback && cb\\n)\\n\")), mdx(\"p\", null, \"Schedules execution of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"func\"), \" in a new coroutine, with the provided arguments. \"), mdx(\"p\", null, \"The callback \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cb\"), \" will be called once \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"func\"), \" has completed its execution. Note that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"func\"), \" will not be executed from within this function (the next call to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[vm.run_ready()](/docs/api/classes/classtiro_1_1vm#function-run_ready)\"), \" will do that). TODO: Extract the result() from the coroutine and pass it directly to the callback. \"), mdx(\"h3\", {\n    \"id\": \"function-name\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-name\"\n  }, \"#\"), \"function name\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const char * name(\\n    api_errc e\\n)\\n\")), mdx(\"p\", null, \"Returns the name of the given error code. \"), mdx(\"h3\", {\n    \"id\": \"function-message\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-message\"\n  }, \"#\"), \"function message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const char * message(\\n    api_errc e\\n)\\n\")), mdx(\"p\", null, \"Returns the human readable message associated with the error code. \"), mdx(\"h3\", {\n    \"id\": \"function-make_tuple\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_tuple\"\n  }, \"#\"), \"function make_tuple\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline tuple make_tuple(\\n    vm & v,\\n    size_t size\\n)\\n\")), mdx(\"p\", null, \"Constructs a new tuple value with the given size. \"), mdx(\"p\", null, \"All elements of that tuple will be initialized to null. \"), mdx(\"h3\", {\n    \"id\": \"function-make_sync_function\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_sync_function\"\n  }, \"#\"), \"function make_sync_function\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"template <auto Function>\\nfunction make_sync_function(\\n    vm & v,\\n    const string & name,\\n    size_t argc,\\n    const handle & closure\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-make_success\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_success\"\n  }, \"#\"), \"function make_success\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline result make_success(\\n    vm & v,\\n    const handle & value\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-make_string\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_string\"\n  }, \"#\"), \"function make_string\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline string make_string(\\n    vm & v,\\n    std::string_view value\\n)\\n\")), mdx(\"p\", null, \"Constructs a new string value. \"), mdx(\"h3\", {\n    \"id\": \"function-make_record\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_record\"\n  }, \"#\"), \"function make_record\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline record make_record(\\n    vm & v,\\n    const array & keys\\n)\\n\")), mdx(\"p\", null, \"Constructs a new record with the given keys. \"), mdx(\"p\", null, \"All keys must be unique strings. All values of the record will be initialized to null. \"), mdx(\"h3\", {\n    \"id\": \"function-make_null\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_null\"\n  }, \"#\"), \"function make_null\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline null make_null(\\n    vm & v\\n)\\n\")), mdx(\"p\", null, \"Constructs a new handle, initialized to null. \"), mdx(\"h3\", {\n    \"id\": \"function-make_module\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_module\"\n  }, \"#\"), \"function make_module\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline module make_module(\\n    vm & v,\\n    const char * name,\\n    const std::vector< std::pair< std::string, handle >> & exports\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-make_integer\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_integer\"\n  }, \"#\"), \"function make_integer\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline integer make_integer(\\n    vm & v,\\n    int64_t value\\n)\\n\")), mdx(\"p\", null, \"Constructs a new integer value. \"), mdx(\"h3\", {\n    \"id\": \"function-make_float\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_float\"\n  }, \"#\"), \"function make_float\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline float_ make_float(\\n    vm & v,\\n    double value\\n)\\n\")), mdx(\"p\", null, \"Constructs a new float value. \"), mdx(\"h3\", {\n    \"id\": \"function-make_failure\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_failure\"\n  }, \"#\"), \"function make_failure\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline result make_failure(\\n    vm & v,\\n    const handle & reason\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-make_coroutine\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_coroutine\"\n  }, \"#\"), \"function make_coroutine\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline coroutine make_coroutine(\\n    vm & v,\\n    const function & func,\\n    const handle & arguments\\n)\\n\")), mdx(\"p\", null, \"Constructs a new coroutine value. \"), mdx(\"p\", null, \"The coroutine will call the given function with the provided arguments, once it has been started. \"), mdx(\"h3\", {\n    \"id\": \"function-make_coroutine-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_coroutine-1\"\n  }, \"#\"), \"function make_coroutine\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline coroutine make_coroutine(\\n    vm & v,\\n    const function & func\\n)\\n\")), mdx(\"p\", null, \"Constructs a new coroutine value. \"), mdx(\"p\", null, \"The coroutine will call the given function without any arguments, once it has been started. \"), mdx(\"h3\", {\n    \"id\": \"function-make_copy\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_copy\"\n  }, \"#\"), \"function make_copy\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline handle make_copy(\\n    vm & v,\\n    tiro_handle_t value\\n)\\n\")), mdx(\"p\", null, \"Constructs a new handle as a copy of the given value. \"), mdx(\"h3\", {\n    \"id\": \"function-make_boolean\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_boolean\"\n  }, \"#\"), \"function make_boolean\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline boolean make_boolean(\\n    vm & v,\\n    bool value\\n)\\n\")), mdx(\"p\", null, \"Constructs a new boolean value. \"), mdx(\"h3\", {\n    \"id\": \"function-make_async_function\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_async_function\"\n  }, \"#\"), \"function make_async_function\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"template <auto Function>\\nfunction make_async_function(\\n    vm & v,\\n    const string & name,\\n    size_t argc,\\n    const handle & closure\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-make_array\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-make_array\"\n  }, \"#\"), \"function make_array\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline array make_array(\\n    vm & v,\\n    size_t initial_capacity =0\\n)\\n\")), mdx(\"p\", null, \"Constructs a new array with the given initial capacity. The array will be empty. \"), mdx(\"h3\", {\n    \"id\": \"function-load_module\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-load_module\"\n  }, \"#\"), \"function load_module\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline void load_module(\\n    const vm & v,\\n    const module & m\\n)\\n\")), mdx(\"p\", null, \"Attempts to load the given module into the virtual machine. \"), mdx(\"h3\", {\n    \"id\": \"function-get_export\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-get_export\"\n  }, \"#\"), \"function get_export\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline handle get_export(\\n    const vm & v,\\n    const char * module_name,\\n    const char * export_name\\n)\\n\")), mdx(\"p\", null, \"Attempts to find an exported value called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"export_name\"), \" in the module \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"module_name\"), \". \"), mdx(\"h3\", {\n    \"id\": \"function-compile_time_version\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-compile_time_version\"\n  }, \"#\"), \"function compile_time_version\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline constexpr version compile_time_version()\\n\")), mdx(\"p\", null, \"Returns the compile time version of the tiro library, i.e. \"), mdx(\"p\", null, \"the version the application was built against. \"), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on 11 April 2021 at 12:05:09 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tiro\"><a class=\"anchor-link\" href=\"#tiro\">#</a>tiro</h1><h2 id=\"namespaces\"><a class=\"anchor-link\" href=\"#namespaces\">#</a>Namespaces</h2><table><thead><tr><th>Name</th></tr></thead><tbody><tr><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro_1_1detail\">tiro::detail</a></strong></td></tr></tbody></table><h2 id=\"classes\"><a class=\"anchor-link\" href=\"#classes\">#</a>Classes</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>struct</td><td><strong><a href=\"/tiro-website/docs/api/classes/structtiro_1_1vm__settings\">tiro::vm_settings</a></strong> <br/>Settings to control the construction of a virtual machine.</td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">tiro::vm</a></strong></td></tr><tr><td>struct</td><td><strong><a href=\"/tiro-website/docs/api/classes/structtiro_1_1version\">tiro::version</a></strong> <br/>Represents a library version.</td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1type\">tiro::type</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1tuple\">tiro::tuple</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1sync__frame\">tiro::sync_frame</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1string\">tiro::string</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1result\">tiro::result</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1record\">tiro::record</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1null\">tiro::null</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native__type\">tiro::native_type</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1native\">tiro::native</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1module\">tiro::module</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1integer\">tiro::integer</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">tiro::handle</a></strong> <br/>A handle represents a reference to an object.</td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1generic__error\">tiro::generic_error</a></strong> <br/>Generic error with a simple message.</td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1function\">tiro::function</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1float__\">tiro::float_</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1error__adapter\">tiro::error_adapter</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1error\">tiro::error</a></strong> <br/>Base class for all errors thrown by this library.</td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1coroutine\">tiro::coroutine</a></strong></td></tr><tr><td>struct</td><td><strong><a href=\"/tiro-website/docs/api/classes/structtiro_1_1compiler__settings\">tiro::compiler_settings</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1compiler\">tiro::compiler</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1compiled__module\">tiro::compiled_module</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1boolean\">tiro::boolean</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1bad__handle__check\">tiro::bad_handle_check</a></strong> <br/>Thrown when a debug mode handle check failed.</td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1bad__handle__cast\">tiro::bad_handle_cast</a></strong> <br/>Thrown when an invalid cast is attempted.</td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1async__frame\">tiro::async_frame</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1array\">tiro::array</a></strong></td></tr><tr><td>class</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1api__error\">tiro::api_error</a></strong> <br/>Represents an error thrown by the tiro c library.</td></tr></tbody></table><h2 id=\"types\"><a class=\"anchor-link\" href=\"#types\">#</a>Types</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>enum int</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-value_kind\">value_kind</a></strong> { type = TIRO<em>KIND_TYPE, tuple = TIRO_KIND_TUPLE, string = TIRO_KIND_STRING, result = TIRO_KIND_RESULT, record = TIRO_KIND_RECORD, null = TIRO_KIND_NULL, native = TIRO_KIND_NATIVE, module = TIRO_KIND_MODULE, invalid = TIRO_KIND_INVALID, internal = TIRO_KIND_INTERNAL, integer = TIRO_KIND_INTEGER, function = TIRO_KIND_FUNCTION, float</em> = TIRO_KIND_FLOAT, coroutine = TIRO_KIND_COROUTINE, boolean = TIRO_KIND_BOOLEAN, array = TIRO_KIND_ARRAY}<br/>Represents the kind of a value.</td></tr><tr><td>enum int</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-severity\">severity</a></strong> { warning = TIRO_SEVERITY_WARNING, error = TIRO_SEVERITY_ERROR}</td></tr><tr><td>enum int</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-api_errc\">api_errc</a></strong> { out_of_bounds = TIRO_ERROR_OUT_OF_BOUNDS, ok = TIRO_OK, module_not_found = TIRO_ERROR_MODULE_NOT_FOUND, module_exists = TIRO_ERROR_MODULE_EXISTS, internal = TIRO_ERROR_INTERNAL, export_not_found = TIRO_ERROR_EXPORT_NOT_FOUND, bad_type = TIRO_ERROR_BAD_TYPE, bad_state = TIRO_ERROR_BAD_STATE, bad_source = TIRO_ERROR_BAD_SOURCE, bad_key = TIRO_ERROR_BAD_KEY, bad_arg = TIRO_ERROR_BAD_ARG, alloc = TIRO_ERROR_ALLOC}</td></tr></tbody></table><h2 id=\"functions\"><a class=\"anchor-link\" href=\"#functions\">#</a>Functions</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-to_string\">to_string</a></strong>(<a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-severity\">severity</a> s)</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-to_string\">to_string</a></strong>(<a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-value_kind\">value_kind</a> k)</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/structtiro_1_1version\">version</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-runtime_version\">runtime_version</a></strong>()<br/>Returns the runtime version of the tiro library, i.e.</td></tr><tr><td>template &lt;typename Callback <!-- -->&gt;<!-- --> <br/>void</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-run_async\">run_async</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1function\">function</a> &amp; func, Callback &amp;&amp; cb)<br/>Schedules execution of <code>func</code> in a new coroutine without any arguments.</td></tr><tr><td>template &lt;typename Callback <!-- -->&gt;<!-- --> <br/>void</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-run_async\">run_async</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1function\">function</a> &amp; func, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a> &amp; args, Callback &amp;&amp; cb)<br/>Schedules execution of <code>func</code> in a new coroutine, with the provided arguments.</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-name\">name</a></strong>(<a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-api_errc\">api_errc</a> e)<br/>Returns the name of the given error code.</td></tr><tr><td>const char *</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-message\">message</a></strong>(<a href=\"/tiro-website/docs/api/namespaces/namespacetiro#enum-api_errc\">api_errc</a> e)<br/>Returns the human readable message associated with the error code.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1tuple\">tuple</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_tuple\">make_tuple</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, size_t size)<br/>Constructs a new tuple value with the given size.</td></tr><tr><td>template &lt;auto Function<!-- -->&gt;<!-- --> <br/><a href=\"/tiro-website/docs/api/classes/classtiro_1_1function\">function</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_sync_function\">make_sync_function</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1string\">string</a> &amp; name, size_t argc, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a> &amp; closure)</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1result\">result</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_success\">make_success</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a> &amp; value)</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1string\">string</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_string\">make_string</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, std::string_view value)<br/>Constructs a new string value.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1record\">record</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_record\">make_record</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1array\">array</a> &amp; keys)<br/>Constructs a new record with the given keys.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1null\">null</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_null\">make_null</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v)<br/>Constructs a new handle, initialized to null.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1module\">module</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_module\">make_module</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const char * name, const std::vector&lt; std::pair&lt; std::string, <a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a> &gt;&gt; &amp; exports)</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1integer\">integer</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_integer\">make_integer</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, int64_t value)<br/>Constructs a new integer value.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1float__\">float_</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_float\">make_float</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, double value)<br/>Constructs a new float value.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1result\">result</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_failure\">make_failure</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a> &amp; reason)</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1coroutine\">coroutine</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_coroutine\">make_coroutine</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1function\">function</a> &amp; func, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a> &amp; arguments)<br/>Constructs a new coroutine value.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1coroutine\">coroutine</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_coroutine\">make_coroutine</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1function\">function</a> &amp; func)<br/>Constructs a new coroutine value.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_copy\">make_copy</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a> value)<br/>Constructs a new handle as a copy of the given value.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1boolean\">boolean</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_boolean\">make_boolean</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, bool value)<br/>Constructs a new boolean value.</td></tr><tr><td>template &lt;auto Function<!-- -->&gt;<!-- --> <br/><a href=\"/tiro-website/docs/api/classes/classtiro_1_1function\">function</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_async_function\">make_async_function</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1string\">string</a> &amp; name, size_t argc, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a> &amp; closure)</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1array\">array</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-make_array\">make_array</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, size_t initial_capacity =0)<br/>Constructs a new array with the given initial capacity. The array will be empty.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-load_module\">load_module</a></strong>(const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1module\">module</a> &amp; m)<br/>Attempts to load the given module into the virtual machine.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1handle\">handle</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-get_export\">get_export</a></strong>(const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp; v, const char <em> module_name, const char </em> export_name)<br/>Attempts to find an exported value called <code>export_name</code> in the module <code>module_name</code>.</td></tr><tr><td>constexpr <a href=\"/tiro-website/docs/api/classes/structtiro_1_1version\">version</a></td><td><strong><a href=\"/tiro-website/docs/api/namespaces/namespacetiro#function-compile_time_version\">compile_time_version</a></strong>()<br/>Returns the compile time version of the tiro library, i.e.</td></tr></tbody></table><h2 id=\"types-documentation\"><a class=\"anchor-link\" href=\"#types-documentation\">#</a>Types Documentation</h2><h3 id=\"enum-value_kind\"><a class=\"anchor-link\" href=\"#enum-value_kind\">#</a>enum value_kind</h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td>TIRO_KIND_TYPE</td><td></td></tr><tr><td>tuple</td><td>TIRO_KIND_TUPLE</td><td></td></tr><tr><td>string</td><td>TIRO_KIND_STRING</td><td></td></tr><tr><td>result</td><td>TIRO_KIND_RESULT</td><td></td></tr><tr><td>record</td><td>TIRO_KIND_RECORD</td><td></td></tr><tr><td>null</td><td>TIRO_KIND_NULL</td><td></td></tr><tr><td>native</td><td>TIRO_KIND_NATIVE</td><td></td></tr><tr><td>module</td><td>TIRO_KIND_MODULE</td><td></td></tr><tr><td>invalid</td><td>TIRO_KIND_INVALID</td><td></td></tr><tr><td>internal</td><td>TIRO_KIND_INTERNAL</td><td></td></tr><tr><td>integer</td><td>TIRO_KIND_INTEGER</td><td></td></tr><tr><td>function</td><td>TIRO_KIND_FUNCTION</td><td></td></tr><tr><td>float_</td><td>TIRO_KIND_FLOAT</td><td></td></tr><tr><td>coroutine</td><td>TIRO_KIND_COROUTINE</td><td></td></tr><tr><td>boolean</td><td>TIRO_KIND_BOOLEAN</td><td></td></tr><tr><td>array</td><td>TIRO_KIND_ARRAY</td><td></td></tr></tbody></table><p>Represents the kind of a value. </p><h3 id=\"enum-severity\"><a class=\"anchor-link\" href=\"#enum-severity\">#</a>enum severity</h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>warning</td><td>TIRO_SEVERITY_WARNING</td><td></td></tr><tr><td>error</td><td>TIRO_SEVERITY_ERROR</td><td></td></tr></tbody></table><h3 id=\"enum-api_errc\"><a class=\"anchor-link\" href=\"#enum-api_errc\">#</a>enum api_errc</h3><table><thead><tr><th>Enumerator</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>out_of_bounds</td><td>TIRO_ERROR_OUT_OF_BOUNDS</td><td></td></tr><tr><td>ok</td><td>TIRO_OK</td><td></td></tr><tr><td>module_not_found</td><td>TIRO_ERROR_MODULE_NOT_FOUND</td><td></td></tr><tr><td>module_exists</td><td>TIRO_ERROR_MODULE_EXISTS</td><td></td></tr><tr><td>internal</td><td>TIRO_ERROR_INTERNAL</td><td></td></tr><tr><td>export_not_found</td><td>TIRO_ERROR_EXPORT_NOT_FOUND</td><td></td></tr><tr><td>bad_type</td><td>TIRO_ERROR_BAD_TYPE</td><td></td></tr><tr><td>bad_state</td><td>TIRO_ERROR_BAD_STATE</td><td></td></tr><tr><td>bad_source</td><td>TIRO_ERROR_BAD_SOURCE</td><td></td></tr><tr><td>bad_key</td><td>TIRO_ERROR_BAD_KEY</td><td></td></tr><tr><td>bad_arg</td><td>TIRO_ERROR_BAD_ARG</td><td></td></tr><tr><td>alloc</td><td>TIRO_ERROR_ALLOC</td><td></td></tr></tbody></table><h2 id=\"functions-documentation\"><a class=\"anchor-link\" href=\"#functions-documentation\">#</a>Functions Documentation</h2><h3 id=\"function-to_string\"><a class=\"anchor-link\" href=\"#function-to_string\">#</a>function to_string</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">to_string</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    severity s</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-to_string-1\"><a class=\"anchor-link\" href=\"#function-to_string-1\">#</a>function to_string</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">to_string</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    value_kind k</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-runtime_version\"><a class=\"anchor-link\" href=\"#function-runtime_version\">#</a>function runtime_version</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> version </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">runtime_version</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the runtime version of the tiro library, i.e. </p><p>the version the application is currently running against. </p><h3 id=\"function-run_async\"><a class=\"anchor-link\" href=\"#function-run_async\">#</a>function run_async</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">template</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&lt;</span><span class=\"token keyword\" style=\"color:#e3116c\">typename</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(227, 98, 9)\">Callback</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">run_async</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> function </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> func</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    Callback </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> cb</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Schedules execution of <code>func</code> in a new coroutine without any arguments. </p><p>The callback <code>cb</code> will be called once <code>func</code> has completed its execution. Note that <code>func</code> will not be executed from within this function (the next call to <code>[vm.run_ready()](/docs/api/classes/classtiro_1_1vm#function-run_ready)</code> will do that). TODO: Extract the result() from the coroutine and pass it directly to the callback. </p><h3 id=\"function-run_async-1\"><a class=\"anchor-link\" href=\"#function-run_async-1\">#</a>function run_async</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">template</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&lt;</span><span class=\"token keyword\" style=\"color:#e3116c\">typename</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(227, 98, 9)\">Callback</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">run_async</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> function </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> func</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> handle </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    Callback </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> cb</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Schedules execution of <code>func</code> in a new coroutine, with the provided arguments. </p><p>The callback <code>cb</code> will be called once <code>func</code> has completed its execution. Note that <code>func</code> will not be executed from within this function (the next call to <code>[vm.run_ready()](/docs/api/classes/classtiro_1_1vm#function-run_ready)</code> will do that). TODO: Extract the result() from the coroutine and pass it directly to the callback. </p><h3 id=\"function-name\"><a class=\"anchor-link\" href=\"#function-name\">#</a>function name</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    api_errc e</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the name of the given error code. </p><h3 id=\"function-message\"><a class=\"anchor-link\" href=\"#function-message\">#</a>function message</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">message</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    api_errc e</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the human readable message associated with the error code. </p><h3 id=\"function-make_tuple\"><a class=\"anchor-link\" href=\"#function-make_tuple\">#</a>function make_tuple</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> tuple </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_tuple</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    size_t size</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new tuple value with the given size. </p><p>All elements of that tuple will be initialized to null. </p><h3 id=\"function-make_sync_function\"><a class=\"anchor-link\" href=\"#function-make_sync_function\">#</a>function make_sync_function</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">template</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&lt;</span><span class=\"token keyword\" style=\"color:#e3116c\">auto</span><span class=\"token plain\"> Function</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">function </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_sync_function</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> string </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    size_t argc</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> handle </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> closure</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-make_success\"><a class=\"anchor-link\" href=\"#function-make_success\">#</a>function make_success</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> result </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_success</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> handle </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> value</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-make_string\"><a class=\"anchor-link\" href=\"#function-make_string\">#</a>function make_string</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> string </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_string</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">string_view value</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new string value. </p><h3 id=\"function-make_record\"><a class=\"anchor-link\" href=\"#function-make_record\">#</a>function make_record</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> record </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_record</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> array </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> keys</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new record with the given keys. </p><p>All keys must be unique strings. All values of the record will be initialized to null. </p><h3 id=\"function-make_null\"><a class=\"anchor-link\" href=\"#function-make_null\">#</a>function make_null</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> null </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_null</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new handle, initialized to null. </p><h3 id=\"function-make_module\"><a class=\"anchor-link\" href=\"#function-make_module\">#</a>function make_module</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> module </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_module</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">vector</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&lt;</span><span class=\"token plain\"> std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">pair</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&lt;</span><span class=\"token plain\"> std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">string</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"> handle </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&gt;&gt;</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> exports</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-make_integer\"><a class=\"anchor-link\" href=\"#function-make_integer\">#</a>function make_integer</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> integer </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_integer</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">int64_t</span><span class=\"token plain\"> value</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new integer value. </p><h3 id=\"function-make_float\"><a class=\"anchor-link\" href=\"#function-make_float\">#</a>function make_float</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> float_ </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_float</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">double</span><span class=\"token plain\"> value</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new float value. </p><h3 id=\"function-make_failure\"><a class=\"anchor-link\" href=\"#function-make_failure\">#</a>function make_failure</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> result </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_failure</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> handle </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> reason</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-make_coroutine\"><a class=\"anchor-link\" href=\"#function-make_coroutine\">#</a>function make_coroutine</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> coroutine </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_coroutine</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> function </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> func</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> handle </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> arguments</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new coroutine value. </p><p>The coroutine will call the given function with the provided arguments, once it has been started. </p><h3 id=\"function-make_coroutine-1\"><a class=\"anchor-link\" href=\"#function-make_coroutine-1\">#</a>function make_coroutine</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> coroutine </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_coroutine</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> function </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> func</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new coroutine value. </p><p>The coroutine will call the given function without any arguments, once it has been started. </p><h3 id=\"function-make_copy\"><a class=\"anchor-link\" href=\"#function-make_copy\">#</a>function make_copy</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> handle </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_copy</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_handle_t value</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new handle as a copy of the given value. </p><h3 id=\"function-make_boolean\"><a class=\"anchor-link\" href=\"#function-make_boolean\">#</a>function make_boolean</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> boolean </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_boolean</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">bool</span><span class=\"token plain\"> value</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new boolean value. </p><h3 id=\"function-make_async_function\"><a class=\"anchor-link\" href=\"#function-make_async_function\">#</a>function make_async_function</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">template</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&lt;</span><span class=\"token keyword\" style=\"color:#e3116c\">auto</span><span class=\"token plain\"> Function</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">function </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_async_function</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> string </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    size_t argc</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> handle </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> closure</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-make_array\"><a class=\"anchor-link\" href=\"#function-make_array\">#</a>function make_array</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> array </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">make_array</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    size_t initial_capacity </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token number\">0</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Constructs a new array with the given initial capacity. The array will be empty. </p><h3 id=\"function-load_module\"><a class=\"anchor-link\" href=\"#function-load_module\">#</a>function load_module</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">load_module</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> module </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> m</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Attempts to load the given module into the virtual machine. </p><h3 id=\"function-get_export\"><a class=\"anchor-link\" href=\"#function-get_export\">#</a>function get_export</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> handle </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">get_export</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> v</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> module_name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> export_name</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Attempts to find an exported value called <code>export_name</code> in the module <code>module_name</code>. </p><h3 id=\"function-compile_time_version\"><a class=\"anchor-link\" href=\"#function-compile_time_version\">#</a>function compile_time_version</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">constexpr</span><span class=\"token plain\"> version </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">compile_time_version</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the compile time version of the tiro library, i.e. </p><p>the version the application was built against. </p><hr/><p>Updated on 11 April 2021 at 12:05:09 CEST</p>","scope":{}}},"__N_SSG":true}