{"pageProps":{"slug":"files/vm_8h","frontMatter":{"title":"tiro/vm.h"},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tirovmh\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#tirovmh\"\n  }, \"#\"), \"tiro/vm.h\"), mdx(\"h2\", {\n    \"id\": \"classes\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#classes\"\n  }, \"#\"), \"Classes\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"struct\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/structtiro__vm__settings\"\n  }, \"tiro_vm_settings\")), \" \", mdx(\"br\", null), \"The \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"\"\n  }, \"tiro_vm_settings\"), \" structure can be provided to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"tiro_vm_new\"), \" as a configuration parameter.\")))), mdx(\"h2\", {\n    \"id\": \"types\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#types\"\n  }, \"#\"), \"Types\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"typedef struct \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/structtiro__vm__settings\"\n  }, \"tiro_vm_settings\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#typedef-tiro_vm_settings_t\"\n  }, \"tiro_vm_settings_t\")), \" \", mdx(\"br\", null), \"The \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/structtiro__vm__settings\"\n  }, \"tiro_vm_settings\"), \" structure can be provided to \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"tiro_vm_new\"), \" as a configuration parameter.\")))), mdx(\"h2\", {\n    \"id\": \"functions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#functions\"\n  }, \"#\"), \"Functions\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_userdata\"\n  }, \"tiro_vm_userdata\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm)\", mdx(\"br\", null), \"Returns the userdata pointer that was passed in the settings struct during vm construction.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_settings_init\"\n  }, \"tiro_vm_settings_init\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/vm_8h#typedef-tiro_vm_settings_t\"\n  }, \"tiro_vm_settings_t\"), \" * settings)\", mdx(\"br\", null), \"Initializes the given tiro settings object with default values.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_run_ready\"\n  }, \"tiro_vm_run_ready\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" * err)\", mdx(\"br\", null), \"Runs all ready coroutines.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_new\"\n  }, \"tiro_vm_new\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/vm_8h#typedef-tiro_vm_settings_t\"\n  }, \"tiro_vm_settings_t\"), \" \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \" settings, \", mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" \"), \" err)\", mdx(\"br\", null), \"Allocates a new virtual machine instance.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_load_std\"\n  }, \"tiro_vm_load_std\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" * err)\", mdx(\"br\", null), \"Load the default modules provided by the runtime.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_load_module\"\n  }, \"tiro_vm_load_module\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\"), \" module, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" * err)\", mdx(\"br\", null), \"Loads the given module object into the virtual machine.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_load_bytecode\"\n  }, \"tiro_vm_load_bytecode\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_module_t\"\n  }, \"tiro_module_t\"), \" module, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" * err)\", mdx(\"br\", null), \"Loads the compiled module into the virtual machine.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bool\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_has_ready\"\n  }, \"tiro_vm_has_ready\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm)\", mdx(\"br\", null), \"Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_get_export\"\n  }, \"tiro_vm_get_export\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, const char \", mdx(\"em\", {\n    parentName: \"td\"\n  }, \" module_name, const char \"), \" function_name, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\"), \" result, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" * err)\", mdx(\"br\", null), \"Attempts to find the exported value with the given name in the specified module.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_free\"\n  }, \"tiro_vm_free\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm)\", mdx(\"br\", null), \"Free a virtual machine.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_vm_call\"\n  }, \"tiro_vm_call\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\"), \" function, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\"), \" arguments, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\"), \" result, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" * err)\", mdx(\"br\", null), \"Calls the given function and places the function's return value into \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"result\"), \" (if present).\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_global_new\"\n  }, \"tiro_global_new\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_error_t\"\n  }, \"tiro_error_t\"), \" * err)\", mdx(\"br\", null), \"Allocates a new global handle.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/files/vm_8h#function-tiro_global_free\"\n  }, \"tiro_global_free\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" vm, \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_handle_t\"\n  }, \"tiro_handle_t\"), \" global)\", mdx(\"br\", null), \"Frees a global handle allocated with \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"tiro_global_new\"), \".\")))), mdx(\"h2\", {\n    \"id\": \"types-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#types-documentation\"\n  }, \"#\"), \"Types Documentation\"), mdx(\"h3\", {\n    \"id\": \"typedef-tiro_vm_settings_t\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#typedef-tiro_vm_settings_t\"\n  }, \"#\"), \"typedef tiro_vm_settings_t\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"typedef struct tiro_vm_settings tiro_vm_settings_t;\\n\")), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/structtiro__vm__settings\"\n  }, \"tiro_vm_settings\"), \" structure can be provided to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiro_vm_new\"), \" as a configuration parameter. \"), mdx(\"p\", null, \"Use tiro_vm_settings_init to initialize this struct to default values. \"), mdx(\"h2\", {\n    \"id\": \"functions-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#functions-documentation\"\n  }, \"#\"), \"Functions Documentation\"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_userdata\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_userdata\"\n  }, \"#\"), \"function tiro_vm_userdata\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void * tiro_vm_userdata(\\n    tiro_vm_t vm\\n)\\n\")), mdx(\"p\", null, \"Returns the userdata pointer that was passed in the settings struct during vm construction. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_settings_init\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_settings_init\"\n  }, \"#\"), \"function tiro_vm_settings_init\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_settings_init(\\n    tiro_vm_settings_t * settings\\n)\\n\")), mdx(\"p\", null, \"Initializes the given tiro settings object with default values. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_run_ready\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_run_ready\"\n  }, \"#\"), \"function tiro_vm_run_ready\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_run_ready(\\n    tiro_vm_t vm,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Runs all ready coroutines. \"), mdx(\"p\", null, \"Returns (and does not block) when all coroutines are either waiting or done. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_new\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_new\"\n  }, \"#\"), \"function tiro_vm_new\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"tiro_vm_t tiro_vm_new(\\n    const tiro_vm_settings_t * settings,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Allocates a new virtual machine instance. \"), mdx(\"p\", null, \"Reads settings from the given \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings\"), \" objects, if it is not NULL. Otherwise uses default values.\"), mdx(\"p\", null, \"Returns NULL on allocation failure. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_load_std\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_load_std\"\n  }, \"#\"), \"function tiro_vm_load_std\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_load_std(\\n    tiro_vm_t vm,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Load the default modules provided by the runtime. \"), mdx(\"p\", null, \"TODO: Configuration? \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_load_module\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_load_module\"\n  }, \"#\"), \"function tiro_vm_load_module\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_load_module(\\n    tiro_vm_t vm,\\n    tiro_handle_t module,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Loads the given module object into the virtual machine. \"), mdx(\"p\", null, \"Returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TIRO_ERROR_MODULE_EXISTS\"), \" if a module with the same name already exists. Returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TIRO_ERROR_BAD_TYPE\"), \" if the argument is not actually a module. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_load_bytecode\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_load_bytecode\"\n  }, \"#\"), \"function tiro_vm_load_bytecode\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_load_bytecode(\\n    tiro_vm_t vm,\\n    tiro_module_t module,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Loads the compiled module into the virtual machine. \"), mdx(\"p\", null, \"Note: this function does \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"not\"), \" take ownership of the module parameter. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_has_ready\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_has_ready\"\n  }, \"#\"), \"function tiro_vm_has_ready\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"bool tiro_vm_has_ready(\\n    tiro_vm_t vm\\n)\\n\")), mdx(\"p\", null, \"Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_get_export\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_get_export\"\n  }, \"#\"), \"function tiro_vm_get_export\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_get_export(\\n    tiro_vm_t vm,\\n    const char * module_name,\\n    const char * function_name,\\n    tiro_handle_t result,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Attempts to find the exported value with the given name in the specified module. \"), mdx(\"p\", null, \"The found function value will be stored in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"result\"), \" handle, which must not be NULL.\"), mdx(\"p\", null, \"Returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TIRO_ERROR_MODULE_NOT_FOUND\"), \" if the specified module was not loaded. Returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TIRO_ERROR_EXPORT_NOT_FOUND\"), \" if the module does not contain an exported member with that name. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_free\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_free\"\n  }, \"#\"), \"function tiro_vm_free\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_free(\\n    tiro_vm_t vm\\n)\\n\")), mdx(\"p\", null, \"Free a virtual machine. \"), mdx(\"p\", null, \"Must be called exactly once for every vm created with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiro_vm_new\"), \".\"), mdx(\"p\", null, \"Does nothing if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vm\"), \" is NULL. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_vm_call\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_vm_call\"\n  }, \"#\"), \"function tiro_vm_call\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_vm_call(\\n    tiro_vm_t vm,\\n    tiro_handle_t function,\\n    tiro_handle_t arguments,\\n    tiro_handle_t result,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Calls the given function and places the function's return value into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"result\"), \" (if present). \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Parameters\"), \": \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"vm\"), \" The virtual machine instance. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"function\"), \" The function to call. Must not be NULL. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"arguments\"), \" The function call arguments. Must be a tuple if arguments shall be passed, or a null value or NULL pointer to indicate zero arguments. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"result\"), \" A handle in which the function's return value will be placed. Can be NULL. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"err\"), \" An optional error handle for detailed error information. \")), mdx(\"p\", null, \"FIXME: Remove this, calling must be async. FIXME: Implement convenience function for async call that creates and runs a coroutine, including a result callback.\"), mdx(\"h3\", {\n    \"id\": \"function-tiro_global_new\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_global_new\"\n  }, \"#\"), \"function tiro_global_new\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"tiro_handle_t tiro_global_new(\\n    tiro_vm_t vm,\\n    tiro_error_t * err\\n)\\n\")), mdx(\"p\", null, \"Allocates a new global handle. \"), mdx(\"p\", null, \"Global handles point to a single rooted object slot that can hold an arbitrary value. Slots are always initialized to null.\"), mdx(\"p\", null, \"When a global handle is no longer required, it should be freed by calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiro_global_free\"), \".\"), mdx(\"p\", null, \"Returns NULL on allocation failure. \"), mdx(\"h3\", {\n    \"id\": \"function-tiro_global_free\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-tiro_global_free\"\n  }, \"#\"), \"function tiro_global_free\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void tiro_global_free(\\n    tiro_vm_t vm,\\n    tiro_handle_t global\\n)\\n\")), mdx(\"p\", null, \"Frees a global handle allocated with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiro_global_new\"), \". \"), mdx(\"p\", null, \"Note: remaining globals are automatically freed when a vm is freed. \"), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on 11 April 2021 at 12:05:10 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tirovmh\"><a class=\"anchor-link\" href=\"#tirovmh\">#</a>tiro/vm.h</h1><h2 id=\"classes\"><a class=\"anchor-link\" href=\"#classes\">#</a>Classes</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>struct</td><td><strong><a href=\"/tiro-website/docs/api/classes/structtiro__vm__settings\">tiro_vm_settings</a></strong> <br/>The <a href=\"\">tiro_vm_settings</a> structure can be provided to <code>tiro_vm_new</code> as a configuration parameter.</td></tr></tbody></table><h2 id=\"types\"><a class=\"anchor-link\" href=\"#types\">#</a>Types</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>typedef struct <a href=\"/tiro-website/docs/api/classes/structtiro__vm__settings\">tiro_vm_settings</a></td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#typedef-tiro_vm_settings_t\">tiro_vm_settings_t</a></strong> <br/>The <a href=\"/tiro-website/docs/api/classes/structtiro__vm__settings\">tiro_vm_settings</a> structure can be provided to <code>tiro_vm_new</code> as a configuration parameter.</td></tr></tbody></table><h2 id=\"functions\"><a class=\"anchor-link\" href=\"#functions\">#</a>Functions</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>void *</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_userdata\">tiro_vm_userdata</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm)<br/>Returns the userdata pointer that was passed in the settings struct during vm construction.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_settings_init\">tiro_vm_settings_init</a></strong>(<a href=\"/tiro-website/docs/api/files/vm_8h#typedef-tiro_vm_settings_t\">tiro_vm_settings_t</a> * settings)<br/>Initializes the given tiro settings object with default values.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_run_ready\">tiro_vm_run_ready</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> * err)<br/>Runs all ready coroutines.</td></tr><tr><td><a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a></td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_new\">tiro_vm_new</a></strong>(const <a href=\"/tiro-website/docs/api/files/vm_8h#typedef-tiro_vm_settings_t\">tiro_vm_settings_t</a> <em> settings, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> </em> err)<br/>Allocates a new virtual machine instance.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_load_std\">tiro_vm_load_std</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> * err)<br/>Load the default modules provided by the runtime.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_load_module\">tiro_vm_load_module</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a> module, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> * err)<br/>Loads the given module object into the virtual machine.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_load_bytecode\">tiro_vm_load_bytecode</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_module_t\">tiro_module_t</a> module, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> * err)<br/>Loads the compiled module into the virtual machine.</td></tr><tr><td>bool</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_has_ready\">tiro_vm_has_ready</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm)<br/>Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_get_export\">tiro_vm_get_export</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, const char <em> module_name, const char </em> function_name, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a> result, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> * err)<br/>Attempts to find the exported value with the given name in the specified module.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_free\">tiro_vm_free</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm)<br/>Free a virtual machine.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_vm_call\">tiro_vm_call</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a> function, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a> arguments, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a> result, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> * err)<br/>Calls the given function and places the function&#x27;s return value into <code>result</code> (if present).</td></tr><tr><td><a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a></td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_global_new\">tiro_global_new</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_error_t\">tiro_error_t</a> * err)<br/>Allocates a new global handle.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/files/vm_8h#function-tiro_global_free\">tiro_global_free</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> vm, <a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_handle_t\">tiro_handle_t</a> global)<br/>Frees a global handle allocated with <code>tiro_global_new</code>.</td></tr></tbody></table><h2 id=\"types-documentation\"><a class=\"anchor-link\" href=\"#types-documentation\">#</a>Types Documentation</h2><h3 id=\"typedef-tiro_vm_settings_t\"><a class=\"anchor-link\" href=\"#typedef-tiro_vm_settings_t\">#</a>typedef tiro_vm_settings_t</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">typedef</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">struct</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(227, 98, 9)\">tiro_vm_settings</span><span class=\"token plain\"> tiro_vm_settings_t</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">;</span></div></pre></div><p>The <a href=\"/tiro-website/docs/api/classes/structtiro__vm__settings\">tiro_vm_settings</a> structure can be provided to <code>tiro_vm_new</code> as a configuration parameter. </p><p>Use tiro_vm_settings_init to initialize this struct to default values. </p><h2 id=\"functions-documentation\"><a class=\"anchor-link\" href=\"#functions-documentation\">#</a>Functions Documentation</h2><h3 id=\"function-tiro_vm_userdata\"><a class=\"anchor-link\" href=\"#function-tiro_vm_userdata\">#</a>function tiro_vm_userdata</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_userdata</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns the userdata pointer that was passed in the settings struct during vm construction. </p><h3 id=\"function-tiro_vm_settings_init\"><a class=\"anchor-link\" href=\"#function-tiro_vm_settings_init\">#</a>function tiro_vm_settings_init</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_settings_init</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_settings_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> settings</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Initializes the given tiro settings object with default values. </p><h3 id=\"function-tiro_vm_run_ready\"><a class=\"anchor-link\" href=\"#function-tiro_vm_run_ready\">#</a>function tiro_vm_run_ready</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_run_ready</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Runs all ready coroutines. </p><p>Returns (and does not block) when all coroutines are either waiting or done. </p><h3 id=\"function-tiro_vm_new\"><a class=\"anchor-link\" href=\"#function-tiro_vm_new\">#</a>function tiro_vm_new</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">tiro_vm_t </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_new</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> tiro_vm_settings_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> settings</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Allocates a new virtual machine instance. </p><p>Reads settings from the given <code>settings</code> objects, if it is not NULL. Otherwise uses default values.</p><p>Returns NULL on allocation failure. </p><h3 id=\"function-tiro_vm_load_std\"><a class=\"anchor-link\" href=\"#function-tiro_vm_load_std\">#</a>function tiro_vm_load_std</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_load_std</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Load the default modules provided by the runtime. </p><p>TODO: Configuration? </p><h3 id=\"function-tiro_vm_load_module\"><a class=\"anchor-link\" href=\"#function-tiro_vm_load_module\">#</a>function tiro_vm_load_module</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_load_module</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_handle_t module</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Loads the given module object into the virtual machine. </p><p>Returns <code>TIRO_ERROR_MODULE_EXISTS</code> if a module with the same name already exists. Returns <code>TIRO_ERROR_BAD_TYPE</code> if the argument is not actually a module. </p><h3 id=\"function-tiro_vm_load_bytecode\"><a class=\"anchor-link\" href=\"#function-tiro_vm_load_bytecode\">#</a>function tiro_vm_load_bytecode</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_load_bytecode</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_module_t module</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Loads the compiled module into the virtual machine. </p><p>Note: this function does <em>not</em> take ownership of the module parameter. </p><h3 id=\"function-tiro_vm_has_ready\"><a class=\"anchor-link\" href=\"#function-tiro_vm_has_ready\">#</a>function tiro_vm_has_ready</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">bool</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_has_ready</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise. </p><h3 id=\"function-tiro_vm_get_export\"><a class=\"anchor-link\" href=\"#function-tiro_vm_get_export\">#</a>function tiro_vm_get_export</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_get_export</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> module_name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">char</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> function_name</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_handle_t result</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Attempts to find the exported value with the given name in the specified module. </p><p>The found function value will be stored in the <code>result</code> handle, which must not be NULL.</p><p>Returns <code>TIRO_ERROR_MODULE_NOT_FOUND</code> if the specified module was not loaded. Returns <code>TIRO_ERROR_EXPORT_NOT_FOUND</code> if the module does not contain an exported member with that name. </p><h3 id=\"function-tiro_vm_free\"><a class=\"anchor-link\" href=\"#function-tiro_vm_free\">#</a>function tiro_vm_free</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_free</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Free a virtual machine. </p><p>Must be called exactly once for every vm created with <code>tiro_vm_new</code>.</p><p>Does nothing if <code>vm</code> is NULL. </p><h3 id=\"function-tiro_vm_call\"><a class=\"anchor-link\" href=\"#function-tiro_vm_call\">#</a>function tiro_vm_call</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_vm_call</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_handle_t function</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_handle_t arguments</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_handle_t result</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Calls the given function and places the function&#x27;s return value into <code>result</code> (if present). </p><p><strong>Parameters</strong>: </p><ul><li><strong>vm</strong> The virtual machine instance. </li><li><strong>function</strong> The function to call. Must not be NULL. </li><li><strong>arguments</strong> The function call arguments. Must be a tuple if arguments shall be passed, or a null value or NULL pointer to indicate zero arguments. </li><li><strong>result</strong> A handle in which the function&#x27;s return value will be placed. Can be NULL. </li><li><strong>err</strong> An optional error handle for detailed error information. </li></ul><p>FIXME: Remove this, calling must be async. FIXME: Implement convenience function for async call that creates and runs a coroutine, including a result callback.</p><h3 id=\"function-tiro_global_new\"><a class=\"anchor-link\" href=\"#function-tiro_global_new\">#</a>function tiro_global_new</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">tiro_handle_t </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_global_new</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_error_t </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> err</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Allocates a new global handle. </p><p>Global handles point to a single rooted object slot that can hold an arbitrary value. Slots are always initialized to null.</p><p>When a global handle is no longer required, it should be freed by calling <code>tiro_global_free</code>.</p><p>Returns NULL on allocation failure. </p><h3 id=\"function-tiro_global_free\"><a class=\"anchor-link\" href=\"#function-tiro_global_free\">#</a>function tiro_global_free</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">tiro_global_free</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">,</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_handle_t global</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Frees a global handle allocated with <code>tiro_global_new</code>. </p><p>Note: remaining globals are automatically freed when a vm is freed. </p><hr/><p>Updated on 11 April 2021 at 12:05:10 CEST</p>","scope":{}}},"__N_SSG":true}