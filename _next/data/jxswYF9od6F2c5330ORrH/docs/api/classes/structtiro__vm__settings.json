{"pageProps":{"slug":"classes/structtiro__vm__settings","frontMatter":{"title":"tiro_vm_settings","summary":"The tiro_vm_settings structure can be provided to tiro_vm_new as a configuration parameter."},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiro_vm_settings\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#tiro_vm_settings\"\n  }, \"#\"), \"tiro_vm_settings\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"\"\n  }, \"tiro_vm_settings\"), \" structure can be provided to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiro_vm_new\"), \" as a configuration parameter.  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#detailed-description\"\n  }, \"More...\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#include \\\"tiro/vm.h\\\"\")), mdx(\"h2\", {\n    \"id\": \"public-attributes\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-attributes\"\n  }, \"#\"), \"Public Attributes\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/structtiro__vm__settings#variable-userdata\"\n  }, \"userdata\")), \" \", mdx(\"br\", null), \"Arbitrary user data that will be accessible by calling \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"[tiro_vm_userdata()]()\"), \".\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void(*\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/structtiro__vm__settings#variable-print_stdout\"\n  }, \"print_stdout\")), \" \", mdx(\"br\", null), \"This callback is invoked when the vm attempts to print to the standard output stream, for example when \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"std.print(...)\"), \" has been called.\")))), mdx(\"h2\", {\n    \"id\": \"detailed-description\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#detailed-description\"\n  }, \"#\"), \"Detailed Description\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"struct tiro_vm_settings;\\n\")), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"\"\n  }, \"tiro_vm_settings\"), \" structure can be provided to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiro_vm_new\"), \" as a configuration parameter. \"), mdx(\"p\", null, \"Use tiro_vm_settings_init to initialize this struct to default values. \"), mdx(\"h2\", {\n    \"id\": \"public-attributes-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-attributes-documentation\"\n  }, \"#\"), \"Public Attributes Documentation\"), mdx(\"h3\", {\n    \"id\": \"variable-userdata\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#variable-userdata\"\n  }, \"#\"), \"variable userdata\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void * userdata;\\n\")), mdx(\"p\", null, \"Arbitrary user data that will be accessible by calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[tiro_vm_userdata()]()\"), \". \"), mdx(\"p\", null, \"This value is never interpreted in any way. This value is NULL by default. \"), mdx(\"h3\", {\n    \"id\": \"variable-print_stdout\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#variable-print_stdout\"\n  }, \"#\"), \"variable print_stdout\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"void(* print_stdout;\\n\")), mdx(\"p\", null, \"This callback is invoked when the vm attempts to print to the standard output stream, for example when \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"std.print(...)\"), \" has been called. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Parameters\"), \": \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"message\"), \" The string to print. Not guaranteed to be null terminated. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"size\"), \" The size (in bytes) of the message string. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"userdata\"), \" The userdata pointer set in this settings instance. \")), mdx(\"p\", null, \"When this is set to NULL (the default), the message will be printed to the process's standard output.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on 11 April 2021 at 12:05:09 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tiro_vm_settings\"><a class=\"anchor-link\" href=\"#tiro_vm_settings\">#</a>tiro_vm_settings</h1><p>The <a href=\"\">tiro_vm_settings</a> structure can be provided to <code>tiro_vm_new</code> as a configuration parameter.  <a href=\"#detailed-description\">More...</a></p><p><code>#include &quot;tiro/vm.h&quot;</code></p><h2 id=\"public-attributes\"><a class=\"anchor-link\" href=\"#public-attributes\">#</a>Public Attributes</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td>void *</td><td><strong><a href=\"/tiro-website/docs/api/classes/structtiro__vm__settings#variable-userdata\">userdata</a></strong> <br/>Arbitrary user data that will be accessible by calling <code>[tiro_vm_userdata()]()</code>.</td></tr><tr><td>void(*</td><td><strong><a href=\"/tiro-website/docs/api/classes/structtiro__vm__settings#variable-print_stdout\">print_stdout</a></strong> <br/>This callback is invoked when the vm attempts to print to the standard output stream, for example when <code>std.print(...)</code> has been called.</td></tr></tbody></table><h2 id=\"detailed-description\"><a class=\"anchor-link\" href=\"#detailed-description\">#</a>Detailed Description</h2><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">struct</span><span class=\"token plain\"> </span><span class=\"token class-name\" style=\"color:rgb(227, 98, 9)\">tiro_vm_settings</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">;</span></div></pre></div><p>The <a href=\"\">tiro_vm_settings</a> structure can be provided to <code>tiro_vm_new</code> as a configuration parameter. </p><p>Use tiro_vm_settings_init to initialize this struct to default values. </p><h2 id=\"public-attributes-documentation\"><a class=\"anchor-link\" href=\"#public-attributes-documentation\">#</a>Public Attributes Documentation</h2><h3 id=\"variable-userdata\"><a class=\"anchor-link\" href=\"#variable-userdata\">#</a>variable userdata</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> userdata</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">;</span></div></pre></div><p>Arbitrary user data that will be accessible by calling <code>[tiro_vm_userdata()]()</code>. </p><p>This value is never interpreted in any way. This value is NULL by default. </p><h3 id=\"variable-print_stdout\"><a class=\"anchor-link\" href=\"#variable-print_stdout\">#</a>variable print_stdout</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">*</span><span class=\"token plain\"> print_stdout</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">;</span></div></pre></div><p>This callback is invoked when the vm attempts to print to the standard output stream, for example when <code>std.print(...)</code> has been called. </p><p><strong>Parameters</strong>: </p><ul><li><strong>message</strong> The string to print. Not guaranteed to be null terminated. </li><li><strong>size</strong> The size (in bytes) of the message string. </li><li><strong>userdata</strong> The userdata pointer set in this settings instance. </li></ul><p>When this is set to NULL (the default), the message will be printed to the process&#x27;s standard output.</p><hr/><p>Updated on 11 April 2021 at 12:05:09 CEST</p>","scope":{}}},"__N_SSG":true}