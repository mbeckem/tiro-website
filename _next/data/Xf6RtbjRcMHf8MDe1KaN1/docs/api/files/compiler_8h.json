{"pageProps":{"slug":"files/compiler_8h","frontMatter":{"title":"tiro/compiler.h","summary":"Contains functions and type definitions for compiling tiro source code to modules."},"mdx":{"compiledSource":"var d=Object.defineProperty,c=Object.defineProperties;var _=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var l=(t,r,i)=>r in t?d(t,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[r]=i,e=(t,r)=>{for(var i in r||(r={}))n.call(r,i)&&l(t,i,r[i]);if(o)for(var i of o(r))p.call(r,i)&&l(t,i,r[i]);return t},s=(t,r)=>c(t,_(r));var m=(t,r)=>{var i={};for(var a in t)n.call(t,a)&&r.indexOf(a)<0&&(i[a]=t[a]);if(t!=null&&o)for(var a of o(t))r.indexOf(a)<0&&p.call(t,a)&&(i[a]=t[a]);return i};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var a=i,{components:t}=a,r=m(a,[\"components\"]);return mdx(MDXLayout,s(e(e({},layoutProps),r),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",e({},{id:\"tirocompilerh\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"anchor-link\",href:\"#tirocompilerh\"}),\"#\"),\"tiro/compiler.h\"),mdx(\"p\",null,\"Contains functions and type definitions for compiling tiro source code to modules. \"),mdx(\"h2\",e({},{id:\"classes\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"anchor-link\",href:\"#classes\"}),\"#\"),\"Classes\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null})),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"struct\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/classes/structtiro__compiler__settings\"}),\"tiro_compiler_settings\")),\" \",mdx(\"br\",null),\"An instance of this type can be passed to the compiler to configure it.\")))),mdx(\"h2\",e({},{id:\"types\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"anchor-link\",href:\"#types\"}),\"#\"),\"Types\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null})),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"enum\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#enum-tiro_severity\"}),\"tiro_severity\")),\" { TIRO_SEVERITY_WARNING = 1, TIRO_SEVERITY_ERROR = 2}\",mdx(\"br\",null),\"Defines the possible values for the severity of diagnostic compiler messages.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"typedef enum \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/compiler_8h#enum-tiro_severity\"}),\"tiro_severity\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#typedef-tiro_severity_t\"}),\"tiro_severity_t\")),\" \",mdx(\"br\",null),\"Defines the possible values for the severity of diagnostic compiler messages.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"typedef struct \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/classes/structtiro__compiler__settings\"}),\"tiro_compiler_settings\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#typedef-tiro_compiler_settings_t\"}),\"tiro_compiler_settings_t\")),\" \",mdx(\"br\",null),\"An instance of this type can be passed to the compiler to configure it.\")))),mdx(\"h2\",e({},{id:\"functions\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"anchor-link\",href:\"#functions\"}),\"#\"),\"Functions\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null})),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"const char *\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_severity_str\"}),\"tiro_severity_str\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/compiler_8h#typedef-tiro_severity_t\"}),\"tiro_severity_t\"),\" severity)\",mdx(\"br\",null),\"Returns the string representation of the given severity value.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_settings_init\"}),\"tiro_compiler_settings_init\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/compiler_8h#typedef-tiro_compiler_settings_t\"}),\"tiro_compiler_settings_t\"),\" * settings)\",mdx(\"br\",null),\"Initializes the given compiler settings object with default values.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_new\"}),\"tiro_compiler_new\")),\"(const \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/compiler_8h#typedef-tiro_compiler_settings_t\"}),\"tiro_compiler_settings_t\"),\" \",mdx(\"em\",{parentName:\"td\"},\" settings, \",mdx(\"a\",e({parentName:\"em\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" \"),\" err)\",mdx(\"br\",null),\"Allocates a new compiler instance.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_free\"}),\"tiro_compiler_free\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler)\",mdx(\"br\",null),\"Destroys and frees the given compiler instance.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_add_file\"}),\"tiro_compiler_add_file\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler, \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_string_t\"}),\"tiro_string_t\"),\" file_name, \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_string_t\"}),\"tiro_string_t\"),\" file_content, \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" * err)\",mdx(\"br\",null),\"Add a source file to the compiler.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_run\"}),\"tiro_compiler_run\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler, \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" * err)\",mdx(\"br\",null),\"Run the compiler on the set of source files provided via \",mdx(\"inlineCode\",{parentName:\"td\"},\"tiro_compiler_add_file\"),\".\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"bool\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_has_module\"}),\"tiro_compiler_has_module\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler)\",mdx(\"br\",null),\"Returns true if this compiler has successfully compiled a set of source files and produced a bytecode module.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_take_module\"}),\"tiro_compiler_take_module\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler, \",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_module_t\"}),\"tiro_module_t\"),\" \",mdx(\"em\",{parentName:\"td\"},\" module, \",mdx(\"a\",e({parentName:\"em\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" \"),\" err)\",mdx(\"br\",null),\"Extracts the compiled module from the compiler and returns it.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_dump_cst\"}),\"tiro_compiler_dump_cst\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler, char *\",mdx(\"em\",{parentName:\"td\"},\" string, \",mdx(\"a\",e({parentName:\"em\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" \"),\" err)\",mdx(\"br\",null),\"Returns the string representation of the concrete syntax tree (CST).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_dump_ast\"}),\"tiro_compiler_dump_ast\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler, char *\",mdx(\"em\",{parentName:\"td\"},\" string, \",mdx(\"a\",e({parentName:\"em\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" \"),\" err)\",mdx(\"br\",null),\"Returns the string representation of the abstract syntax tree (AST).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_dump_ir\"}),\"tiro_compiler_dump_ir\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler, char *\",mdx(\"em\",{parentName:\"td\"},\" string, \",mdx(\"a\",e({parentName:\"em\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" \"),\" err)\",mdx(\"br\",null),\"Returns the string representation of the internal representation immediately before code generation.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_compiler_dump_bytecode\"}),\"tiro_compiler_dump_bytecode\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_compiler_t\"}),\"tiro_compiler_t\"),\" compiler, char *\",mdx(\"em\",{parentName:\"td\"},\" string, \",mdx(\"a\",e({parentName:\"em\"},{href:\"/docs/api/files/def_8h#typedef-tiro_error_t\"}),\"tiro_error_t\"),\" \"),\" err)\",mdx(\"br\",null),\"Returns the string representation of the compiled bytecode module.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"void\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",e({parentName:\"strong\"},{href:\"/docs/api/files/compiler_8h#function-tiro_module_free\"}),\"tiro_module_free\")),\"(\",mdx(\"a\",e({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro_module_t\"}),\"tiro_module_t\"),\" module)\",mdx(\"br\",null),\"Free a module.\")))),mdx(\"h2\",e({},{id:\"types-documentation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"anchor-link\",href:\"#types-documentation\"}),\"#\"),\"Types Documentation\"),mdx(\"h3\",e({},{id:\"enum-tiro_severity\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#enum-tiro_severity\"}),\"#\"),\"enum tiro_severity\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Enumerator\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Value\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"TIRO_SEVERITY_WARNING\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"1\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"A compiler warning.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"TIRO_SEVERITY_ERROR\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"2\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"A compiler error (compilation fails)\")))),mdx(\"p\",null,\"Defines the possible values for the severity of diagnostic compiler messages. \"),mdx(\"h3\",e({},{id:\"typedef-tiro_severity_t\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#typedef-tiro_severity_t\"}),\"#\"),\"typedef tiro_severity_t\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`typedef enum tiro_severity tiro_severity_t;\n`)),mdx(\"p\",null,\"Defines the possible values for the severity of diagnostic compiler messages. \"),mdx(\"h3\",e({},{id:\"typedef-tiro_compiler_settings_t\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#typedef-tiro_compiler_settings_t\"}),\"#\"),\"typedef tiro_compiler_settings_t\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`typedef struct tiro_compiler_settings tiro_compiler_settings_t;\n`)),mdx(\"p\",null,\"An instance of this type can be passed to the compiler to configure it. \"),mdx(\"p\",null,\"Use tiro_compiler_settings_init to initialize this struct to default values. \"),mdx(\"h2\",e({},{id:\"functions-documentation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"anchor-link\",href:\"#functions-documentation\"}),\"#\"),\"Functions Documentation\"),mdx(\"h3\",e({},{id:\"function-tiro_severity_str\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_severity_str\"}),\"#\"),\"function tiro_severity_str\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`const char * tiro_severity_str(\n    tiro_severity_t severity\n)\n`)),mdx(\"p\",null,\"Returns the string representation of the given severity value. \"),mdx(\"p\",null,\"The returned string is allocated in static storage and MUST NOT be freed. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_settings_init\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_settings_init\"}),\"#\"),\"function tiro_compiler_settings_init\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_settings_init(\n    tiro_compiler_settings_t * settings\n)\n`)),mdx(\"p\",null,\"Initializes the given compiler settings object with default values. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_new\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_new\"}),\"#\"),\"function tiro_compiler_new\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`tiro_compiler_t tiro_compiler_new(\n    const tiro_compiler_settings_t * settings,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Allocates a new compiler instance. \"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Parameters\"),\": \"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"settings\"),\" The compiler settings (optional). Default values will be used if this parameter is NULL.\")),mdx(\"p\",null,\"A compiler can be used to compile a set of source files into a module. Warnings or errors emitted during compilation can be observed through the \",mdx(\"inlineCode\",{parentName:\"p\"},\"settings->message_callback\"),\" function.\"),mdx(\"p\",null,\"FIXME: Currently only works for a single source files, implement _add api. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_free\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_free\"}),\"#\"),\"function tiro_compiler_free\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_free(\n    tiro_compiler_t compiler\n)\n`)),mdx(\"p\",null,\"Destroys and frees the given compiler instance. \"),mdx(\"p\",null,\"Must be called exactly once for every instance created via \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_new\"),\" in order to avoid resource leaks. Does nothing if \",mdx(\"inlineCode\",{parentName:\"p\"},\"compiler\"),\" is NULL. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_add_file\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_add_file\"}),\"#\"),\"function tiro_compiler_add_file\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_add_file(\n    tiro_compiler_t compiler,\n    tiro_string_t file_name,\n    tiro_string_t file_content,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Add a source file to the compiler. \"),mdx(\"p\",null,\"Can only be called before compilation started.\"),mdx(\"p\",null,\"FIXME: Can only be called for a single source file as of now. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_run\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_run\"}),\"#\"),\"function tiro_compiler_run\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_run(\n    tiro_compiler_t compiler,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Run the compiler on the set of source files provided via \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_add_file\"),\". \"),mdx(\"p\",null,\"Requires at least once source file. This function can only be called once for every compiler instance.\"),mdx(\"p\",null,\"Returns an error if the compilation fails. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_has_module\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_has_module\"}),\"#\"),\"function tiro_compiler_has_module\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`bool tiro_compiler_has_module(\n    tiro_compiler_t compiler\n)\n`)),mdx(\"p\",null,\"Returns true if this compiler has successfully compiled a set of source files and produced a bytecode module. \"),mdx(\"p\",null,\"In order for this function to return true, a previous call to \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_run\"),\" must have returned \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_OK\"),\" and the compiler must have beeen configured to actually produce a module. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_take_module\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_take_module\"}),\"#\"),\"function tiro_compiler_take_module\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_take_module(\n    tiro_compiler_t compiler,\n    tiro_module_t * module,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Extracts the compiled module from the compiler and returns it. \"),mdx(\"p\",null,\"On success, the module will be placed into the location specified by \",mdx(\"inlineCode\",{parentName:\"p\"},\"module\"),\", which must not be NULL. If a module was returned, it must be freed by calling \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_module_free\"),\".\"),mdx(\"p\",null,\"This function fails if \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_has_module\"),\" returns false. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_dump_cst\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_dump_cst\"}),\"#\"),\"function tiro_compiler_dump_cst\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_dump_cst(\n    tiro_compiler_t compiler,\n    char ** string,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Returns the string representation of the concrete syntax tree (CST). \"),mdx(\"p\",null,\"Can only be called after \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_run\"),\" has been executed. The compile process can have failed; a somewhat useful CST can often still be produced.\"),mdx(\"p\",null,\"Returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_ERROR_BAD_STATE\"),\" if the compiler cannot produce the CST.\"),mdx(\"p\",null,\"Otherwise, this function returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_OK\"),\" and returns a new string using the provided output parameter. The string must be passed to \",mdx(\"inlineCode\",{parentName:\"p\"},\"free\"),\" to release memory. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_dump_ast\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_dump_ast\"}),\"#\"),\"function tiro_compiler_dump_ast\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_dump_ast(\n    tiro_compiler_t compiler,\n    char ** string,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Returns the string representation of the abstract syntax tree (AST). \"),mdx(\"p\",null,\"Can only be called after \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_run\"),\" has been executed. The compile process can have failed; a somewhat useful AST can often still be produced.\"),mdx(\"p\",null,\"Returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_ERROR_BAD_STATE\"),\" if the compiler cannot produce the AST.\"),mdx(\"p\",null,\"Otherwise, this function returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_OK\"),\" and returns a new string using the provided output parameter. The string must be passed to \",mdx(\"inlineCode\",{parentName:\"p\"},\"free\"),\" to release memory. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_dump_ir\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_dump_ir\"}),\"#\"),\"function tiro_compiler_dump_ir\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_dump_ir(\n    tiro_compiler_t compiler,\n    char ** string,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Returns the string representation of the internal representation immediately before code generation. \"),mdx(\"p\",null,\"Can only be called after \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_run\"),\" has been executed successfully.\"),mdx(\"p\",null,\"Returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_ERROR_BAD_STATE\"),\" if the compiler cannot produce the internal representation.\"),mdx(\"p\",null,\"Otherwise, this function returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_OK\"),\" and returns a new string using the provided output parameter. The string must be passed to \",mdx(\"inlineCode\",{parentName:\"p\"},\"free\"),\" to release memory. \"),mdx(\"h3\",e({},{id:\"function-tiro_compiler_dump_bytecode\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_compiler_dump_bytecode\"}),\"#\"),\"function tiro_compiler_dump_bytecode\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_compiler_dump_bytecode(\n    tiro_compiler_t compiler,\n    char ** string,\n    tiro_error_t * err\n)\n`)),mdx(\"p\",null,\"Returns the string representation of the compiled bytecode module. \"),mdx(\"p\",null,\"Can only be called after \",mdx(\"inlineCode\",{parentName:\"p\"},\"tiro_compiler_run\"),\" has been executed successfully.\"),mdx(\"p\",null,\"Returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_ERROR_BAD_STATE\"),\" if the compiler cannot produce the disassembled output.\"),mdx(\"p\",null,\"Otherwise, this function returns \",mdx(\"inlineCode\",{parentName:\"p\"},\"TIRO_OK\"),\" and returns a new string using the provided output parameter. The string must be passed to \",mdx(\"inlineCode\",{parentName:\"p\"},\"free\"),\" to release memory. \"),mdx(\"h3\",e({},{id:\"function-tiro_module_free\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-tiro_module_free\"}),\"#\"),\"function tiro_module_free\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-cpp\"}),`void tiro_module_free(\n    tiro_module_t module\n)\n`)),mdx(\"p\",null,\"Free a module. \"),mdx(\"p\",null,\"Must be called exactly once for every created module.\"),mdx(\"p\",null,\"Does nothing if \",mdx(\"inlineCode\",{parentName:\"p\"},\"module\"),\" is NULL. \"),mdx(\"hr\",null),mdx(\"p\",null,\"Updated on 25 July 2021 at 13:14:57 CEST\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}