{"pageProps":{"slug":"classes/classtiro_1_1vm","frontMatter":{"title":"tiro::vm"},"mdx":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tirovm\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#tirovm\"\n  }, \"#\"), \"tiro::vm\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#include \\\"tiropp/vm.hpp\\\"\")), mdx(\"h2\", {\n    \"id\": \"public-functions\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-functions\"\n  }, \"#\"), \"Public Functions\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Name\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-vm\"\n  }, \"vm\")), \"()\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-vm\"\n  }, \"vm\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/structtiro_1_1vm__settings\"\n  }, \"vm_settings\"), \" settings)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-vm\"\n  }, \"vm\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" && )\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"const std::any &\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-userdata\"\n  }, \"userdata\")), \"() const\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"std::any &\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-userdata\"\n  }, \"userdata\")), \"()\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" &\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-unsafe_from_raw_vm\"\n  }, \"unsafe_from_raw_vm\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\"), \" raw_vm)\", mdx(\"br\", null), \"Returns a reference to the original \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"tiro::vm\"), \" instance.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-run_ready\"\n  }, \"run_ready\")), \"()\", mdx(\"br\", null), \"Runs all ready coroutines. Returns (and does not block) when all coroutines are either waiting or done.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/files/def_8h#typedef-tiro_vm_t\"\n  }, \"tiro_vm_t\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-raw_vm\"\n  }, \"raw_vm\")), \"() const\", mdx(\"br\", null), \"Returns the raw virtual machine instance managed by this object.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" &\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-operator=\"\n  }, \"operator=\")), \"(\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"vm\"), \" && )\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-load_std\"\n  }, \"load_std\")), \"()\", mdx(\"br\", null), \"Loads the \\\"std\\\" module.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-load\"\n  }, \"load\")), \"(const \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"/docs/api/classes/classtiro_1_1compiled__module\"\n  }, \"compiled_module\"), \" & mod)\", mdx(\"br\", null), \"Loads the given compiled module.\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bool\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm#function-has_ready\"\n  }, \"has_ready\")), \"() const\", mdx(\"br\", null), \"Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise.\")))), mdx(\"h2\", {\n    \"id\": \"public-functions-documentation\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#public-functions-documentation\"\n  }, \"#\"), \"Public Functions Documentation\"), mdx(\"h3\", {\n    \"id\": \"function-vm\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-vm\"\n  }, \"#\"), \"function vm\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline vm()\\n\")), mdx(\"h3\", {\n    \"id\": \"function-vm-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-vm-1\"\n  }, \"#\"), \"function vm\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline explicit vm(\\n    vm_settings settings\\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-vm-2\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-vm-2\"\n  }, \"#\"), \"function vm\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"vm(\\n    vm && \\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-userdata\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-userdata\"\n  }, \"#\"), \"function userdata\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline const std::any & userdata() const\\n\")), mdx(\"h3\", {\n    \"id\": \"function-userdata-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-userdata-1\"\n  }, \"#\"), \"function userdata\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline std::any & userdata()\\n\")), mdx(\"h3\", {\n    \"id\": \"function-unsafe_from_raw_vm\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-unsafe_from_raw_vm\"\n  }, \"#\"), \"function unsafe_from_raw_vm\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"static inline vm & unsafe_from_raw_vm(\\n    tiro_vm_t raw_vm\\n)\\n\")), mdx(\"p\", null, \"Returns a reference to the original \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"tiro::vm\"), \" instance. \"), mdx(\"p\", null, \"The raw_vm MUST have been created by the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/api/classes/classtiro_1_1vm\"\n  }, \"tiro::vm\"), \" constructor. \"), mdx(\"h3\", {\n    \"id\": \"function-run_ready\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-run_ready\"\n  }, \"#\"), \"function run_ready\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline void run_ready()\\n\")), mdx(\"p\", null, \"Runs all ready coroutines. Returns (and does not block) when all coroutines are either waiting or done. \"), mdx(\"h3\", {\n    \"id\": \"function-raw_vm\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-raw_vm\"\n  }, \"#\"), \"function raw_vm\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline tiro_vm_t raw_vm() const\\n\")), mdx(\"p\", null, \"Returns the raw virtual machine instance managed by this object. \"), mdx(\"h3\", {\n    \"id\": \"function-operator\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-operator\"\n  }, \"#\"), \"function operator=\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"vm & operator=(\\n    vm && \\n)\\n\")), mdx(\"h3\", {\n    \"id\": \"function-load_std\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-load_std\"\n  }, \"#\"), \"function load_std\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline void load_std()\\n\")), mdx(\"p\", null, \"Loads the \\\"std\\\" module. \"), mdx(\"h3\", {\n    \"id\": \"function-load\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-load\"\n  }, \"#\"), \"function load\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline void load(\\n    const compiled_module & mod\\n)\\n\")), mdx(\"p\", null, \"Loads the given compiled module. \"), mdx(\"h3\", {\n    \"id\": \"function-has_ready\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"className\": \"anchor-link\",\n    \"href\": \"#function-has_ready\"\n  }, \"#\"), \"function has_ready\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"inline bool has_ready() const\\n\")), mdx(\"p\", null, \"Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise. \"), mdx(\"hr\", null), mdx(\"p\", null, \"Updated on 11 April 2021 at 12:05:09 CEST\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 id=\"tirovm\"><a class=\"anchor-link\" href=\"#tirovm\">#</a>tiro::vm</h1><p><code>#include &quot;tiropp/vm.hpp&quot;</code></p><h2 id=\"public-functions\"><a class=\"anchor-link\" href=\"#public-functions\">#</a>Public Functions</h2><table><thead><tr><th></th><th>Name</th></tr></thead><tbody><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-vm\">vm</a></strong>()</td></tr><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-vm\">vm</a></strong>(<a href=\"/tiro-website/docs/api/classes/structtiro_1_1vm__settings\">vm_settings</a> settings)</td></tr><tr><td></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-vm\">vm</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp;&amp; )</td></tr><tr><td>const std::any &amp;</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-userdata\">userdata</a></strong>() const</td></tr><tr><td>std::any &amp;</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-userdata\">userdata</a></strong>()</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp;</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-unsafe_from_raw_vm\">unsafe_from_raw_vm</a></strong>(<a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a> raw_vm)<br/>Returns a reference to the original <a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">tiro::vm</a> instance.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-run_ready\">run_ready</a></strong>()<br/>Runs all ready coroutines. Returns (and does not block) when all coroutines are either waiting or done.</td></tr><tr><td><a href=\"/tiro-website/docs/api/files/def_8h#typedef-tiro_vm_t\">tiro_vm_t</a></td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-raw_vm\">raw_vm</a></strong>() const<br/>Returns the raw virtual machine instance managed by this object.</td></tr><tr><td><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp;</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-operator=\">operator=</a></strong>(<a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">vm</a> &amp;&amp; )</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-load_std\">load_std</a></strong>()<br/>Loads the &quot;std&quot; module.</td></tr><tr><td>void</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-load\">load</a></strong>(const <a href=\"/tiro-website/docs/api/classes/classtiro_1_1compiled__module\">compiled_module</a> &amp; mod)<br/>Loads the given compiled module.</td></tr><tr><td>bool</td><td><strong><a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm#function-has_ready\">has_ready</a></strong>() const<br/>Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise.</td></tr></tbody></table><h2 id=\"public-functions-documentation\"><a class=\"anchor-link\" href=\"#public-functions-documentation\">#</a>Public Functions Documentation</h2><h3 id=\"function-vm\"><a class=\"anchor-link\" href=\"#function-vm\">#</a>function vm</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-vm-1\"><a class=\"anchor-link\" href=\"#function-vm-1\">#</a>function vm</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">explicit</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm_settings settings</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-vm-2\"><a class=\"anchor-link\" href=\"#function-vm-2\">#</a>function vm</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> </span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-userdata\"><a class=\"anchor-link\" href=\"#function-userdata\">#</a>function userdata</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">any </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">userdata</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><h3 id=\"function-userdata-1\"><a class=\"anchor-link\" href=\"#function-userdata-1\">#</a>function userdata</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> std</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">::</span><span class=\"token plain\">any </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">userdata</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-unsafe_from_raw_vm\"><a class=\"anchor-link\" href=\"#function-unsafe_from_raw_vm\">#</a>function unsafe_from_raw_vm</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">static</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">unsafe_from_raw_vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    tiro_vm_t raw_vm</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Returns a reference to the original <a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">tiro::vm</a> instance. </p><p>The raw_vm MUST have been created by the <a href=\"/tiro-website/docs/api/classes/classtiro_1_1vm\">tiro::vm</a> constructor. </p><h3 id=\"function-run_ready\"><a class=\"anchor-link\" href=\"#function-run_ready\">#</a>function run_ready</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">run_ready</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Runs all ready coroutines. Returns (and does not block) when all coroutines are either waiting or done. </p><h3 id=\"function-raw_vm\"><a class=\"anchor-link\" href=\"#function-raw_vm\">#</a>function raw_vm</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> tiro_vm_t </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">raw_vm</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns the raw virtual machine instance managed by this object. </p><h3 id=\"function-operator\"><a class=\"anchor-link\" href=\"#function-operator\">#</a>function operator=</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">operator</span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">=</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    vm </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;&amp;</span><span class=\"token plain\"> </span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><h3 id=\"function-load_std\"><a class=\"anchor-link\" href=\"#function-load_std\">#</a>function load_std</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">load_std</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Loads the &quot;std&quot; module. </p><h3 id=\"function-load\"><a class=\"anchor-link\" href=\"#function-load\">#</a>function load</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">void</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">load</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span><span class=\"token plain\"> compiled_module </span><span class=\"token operator\" style=\"color:rgb(0, 92, 197)\">&amp;</span><span class=\"token plain\"> mod</span></div><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span></div></pre></div><p>Loads the given compiled module. </p><h3 id=\"function-has_ready\"><a class=\"anchor-link\" href=\"#function-has_ready\">#</a>function has_ready</h3><div><pre class=\"prism-code language-cpp\" style=\"color:rgb(36, 41, 46);background-color:#f6f8fa;padding:10px\"><div class=\"token-line\" style=\"color:rgb(36, 41, 46)\"><span class=\"token keyword\" style=\"color:#e3116c\">inline</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">bool</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(111, 66, 193)\">has_ready</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">(</span><span class=\"token punctuation\" style=\"color:rgb(36, 41, 46)\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#e3116c\">const</span></div></pre></div><p>Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise. </p><hr/><p>Updated on 11 April 2021 at 12:05:09 CEST</p>","scope":{}}},"__N_SSG":true}