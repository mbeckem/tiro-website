{"pageProps":{"slug":"classes/classtiro_1_1handle","frontMatter":{"title":"tiro::handle","summary":"A handle represents a reference to an object."},"mdx":{"compiledSource":"var c=Object.defineProperty,h=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var i=(e,t,n)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,a=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&i(e,n,t[n]);if(s)for(var n of s(t))o.call(t,n)&&i(e,n,t[n]);return e},p=(e,t)=>h(e,m(t));var d=(e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&s)for(var r of s(e))t.indexOf(r)<0&&o.call(e,r)&&(n[r]=e[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:e}=r,t=d(r,[\"components\"]);return mdx(MDXLayout,p(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",a({},{id:\"tirohandle\"}),mdx(\"a\",a({parentName:\"h1\"},{className:\"anchor-link\",href:\"#tirohandle\"}),\"\\xA7\"),\"tiro::handle\"),mdx(\"p\",null,\"A handle represents a reference to an object.  \",mdx(\"a\",a({parentName:\"p\"},{href:\"#detailed-description\"}),\"More...\")),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},'#include \"tiropp/objects.hpp\"')),mdx(\"p\",null,\"Inherited by \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1array\"}),\"array\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1boolean\"}),\"boolean\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1coroutine\"}),\"coroutine\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1exception\"}),\"exception\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1float__\"}),\"float_\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1function\"}),\"function\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1integer\"}),\"integer\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1module\"}),\"module\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1native\"}),\"native\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1null\"}),\"null\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1record\"}),\"record\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1record__schema\"}),\"record_schema\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1result\"}),\"result\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1string\"}),\"string\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1tuple\"}),\"tuple\"),\", \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/api/classes/classtiro_1_1type\"}),\"type\")),mdx(\"h2\",a({},{id:\"protected-classes\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#protected-classes\"}),\"\\xA7\"),\"Protected Classes\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",a({parentName:\"tr\"},{align:null})),mdx(\"th\",a({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),\"struct\"),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/structtiro_1_1handle_1_1check__kind__t\"}),\"check_kind_t\")))))),mdx(\"h2\",a({},{id:\"public-functions\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#public-functions\"}),\"\\xA7\"),\"Public Functions\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",a({parentName:\"tr\"},{align:null})),mdx(\"th\",a({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),\"template <typename T \",\">\",\" \",mdx(\"br\",null),\"T\"),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-as\"}),\"as\")),\"() const\",mdx(\"br\",null),\"Converts this value to the target type.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),\"template <typename T \",\">\",\" \",mdx(\"br\",null),\"T\"),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-as\"}),\"as\")),\"()\",mdx(\"br\",null),\"Converts this value to the target type.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null})),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-handle\"}),\"handle\")),\"(\",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro-vm-t\"}),\"tiro\",\"_\",\"vm\",\"_\",\"t\"),\" raw_vm)\",mdx(\"br\",null),\"Constructs a new handle instance.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null})),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-handle\"}),\"handle\")),\"(const \",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1handle\"}),\"handle\"),\" & other)\",mdx(\"br\",null),\"Constructs a new handle and initialize is it with the same value as \",mdx(\"inlineCode\",{parentName:\"td\"},\"other\"),\".\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null})),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-handle\"}),\"handle\")),\"(\",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1handle\"}),\"handle\"),\" && other) =default\",mdx(\"br\",null),\"Move constructs a handle.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null})),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-~handle\"}),\"~handle\")),\"() =default\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1handle\"}),\"handle\"),\" &\"),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-operator=\"}),\"operator=\")),\"(const \",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1handle\"}),\"handle\"),\" & other)\",mdx(\"br\",null),\"Copy assigns a handle.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1handle\"}),\"handle\"),\" &\"),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-operator=\"}),\"operator=\")),\"(\",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1handle\"}),\"handle\"),\" && other) =default\",mdx(\"br\",null),\"Move assigns a handle.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),\"bool\"),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-valid\"}),\"valid\")),\"() const\",mdx(\"br\",null),\"Returns true if this handle points to an object (i.e. it was not moved from).\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/namespaces/namespacetiro#enum-value-kind\"}),\"value_kind\")),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-kind\"}),\"kind\")),\"() const\",mdx(\"br\",null),\"Returns the kind of the value currently held by this handle.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),\"template <typename T \",\">\",\" \",mdx(\"br\",null),\"bool\"),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-is\"}),\"is\")),\"() const\",mdx(\"br\",null),\"Returns true if this value is of the target type.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1type\"}),\"type\")),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-type-of\"}),\"type_of\")),\"() const\",mdx(\"br\",null),\"Returns the type of the value currently held by this handle.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1string\"}),\"string\")),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-to-string\"}),\"to_string\")),\"() const\",mdx(\"br\",null),\"Returns a string that represents the current value.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro-vm-t\"}),\"tiro_vm_t\")),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-raw-vm\"}),\"raw_vm\")),\"() const\",mdx(\"br\",null),\"Returns the raw vm instance associated with this handle.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/files/def_8h#typedef-tiro-handle-t\"}),\"tiro_handle_t\")),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-raw-handle\"}),\"raw_handle\")),\"() const\",mdx(\"br\",null),\"Returns the raw handle instance (nullptr for invalid handles).\")))),mdx(\"h2\",a({},{id:\"protected-functions\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#protected-functions\"}),\"\\xA7\"),\"Protected Functions\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",a({parentName:\"tr\"},{align:null})),mdx(\"th\",a({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null})),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#function-handle\"}),\"handle\")),\"(\",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/structtiro_1_1handle_1_1check__kind__t\"}),\"check\",\"_\",\"kind\",\"_\",\"t\"),\" , \",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/classtiro_1_1handle\"}),\"handle\"),\" && other, \",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/namespaces/namespacetiro#enum-value-kind\"}),\"value\",\"_\",\"kind\"),\" expected)\")))),mdx(\"h2\",a({},{id:\"protected-attributes\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#protected-attributes\"}),\"\\xA7\"),\"Protected Attributes\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",a({parentName:\"tr\"},{align:null})),mdx(\"th\",a({parentName:\"tr\"},{align:null}),\"Name\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",a({parentName:\"tr\"},{align:null}),\"constexpr \",mdx(\"a\",a({parentName:\"td\"},{href:\"/docs/api/classes/structtiro_1_1handle_1_1check__kind__t\"}),\"check\",\"_\",\"kind\",\"_\",\"t\")),mdx(\"td\",a({parentName:\"tr\"},{align:null}),mdx(\"strong\",{parentName:\"td\"},mdx(\"a\",a({parentName:\"strong\"},{href:\"/docs/api/classes/classtiro_1_1handle#variable-check-kind\"}),\"check_kind\")))))),mdx(\"h2\",a({},{id:\"detailed-description\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#detailed-description\"}),\"\\xA7\"),\"Detailed Description\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`class tiro::handle;\n`)),mdx(\"p\",null,\"A handle represents a reference to an object. \"),mdx(\"p\",null,\"Valid handles point to an object slot which is managed by the tiro runtime. All handles internally refer to the virtual machine they belong to. \"),mdx(\"h2\",a({},{id:\"public-functions-documentation\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#public-functions-documentation\"}),\"\\xA7\"),\"Public Functions Documentation\"),mdx(\"h3\",a({},{id:\"function-as\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-as\"}),\"\\xA7\"),\"function as\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`template <typename T >\ninline T as() const\n`)),mdx(\"p\",null,\"Converts this value to the target type. \"),mdx(\"h3\",a({},{id:\"function-as-1\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-as-1\"}),\"\\xA7\"),\"function as\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`template <typename T >\ninline T as()\n`)),mdx(\"p\",null,\"Converts this value to the target type. \"),mdx(\"h3\",a({},{id:\"function-handle\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-handle\"}),\"\\xA7\"),\"function handle\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline explicit handle(\n    tiro_vm_t raw_vm\n)\n`)),mdx(\"p\",null,\"Constructs a new handle instance. \"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Precondition\"),\": \",mdx(\"inlineCode\",{parentName:\"p\"},\"raw_vm != nullptr\"),\". \"),mdx(\"p\",null,\"The handle will belong to the given virtual machine and will be initialized with null.\"),mdx(\"h3\",a({},{id:\"function-handle-1\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-handle-1\"}),\"\\xA7\"),\"function handle\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline handle(\n    const handle & other\n)\n`)),mdx(\"p\",null,\"Constructs a new handle and initialize is it with the same value as \",mdx(\"inlineCode\",{parentName:\"p\"},\"other\"),\". \"),mdx(\"p\",null,\"If \",mdx(\"inlineCode\",{parentName:\"p\"},\"other\"),\" is invalid, then the new handle will also become invalid. \"),mdx(\"h3\",a({},{id:\"function-handle-2\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-handle-2\"}),\"\\xA7\"),\"function handle\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`handle(\n    handle && other\n) =default\n`)),mdx(\"p\",null,\"Move constructs a handle. \"),mdx(\"p\",null,\"The other handle will become invalid: it may not longer be used for any operations other than destruction and assignments. \"),mdx(\"h3\",a({},{id:\"function-handle-3\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-handle-3\"}),\"\\xA7\"),\"function ~handle\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`~handle() =default\n`)),mdx(\"h3\",a({},{id:\"function-operator\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-operator\"}),\"\\xA7\"),\"function operator=\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline handle & operator=(\n    const handle & other\n)\n`)),mdx(\"p\",null,\"Copy assigns a handle. \"),mdx(\"p\",null,\"This handle will contain the same value as \",mdx(\"inlineCode\",{parentName:\"p\"},\"other\"),\". If other was invalid, then this handle will also become invalid. \"),mdx(\"h3\",a({},{id:\"function-operator-1\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-operator-1\"}),\"\\xA7\"),\"function operator=\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`handle & operator=(\n    handle && other\n) =default\n`)),mdx(\"p\",null,\"Move assigns a handle. \"),mdx(\"p\",null,\"The other handle will become invalid: it may not longer be used for any operations other than destruction and assignments. \"),mdx(\"h3\",a({},{id:\"function-valid\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-valid\"}),\"\\xA7\"),\"function valid\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline bool valid() const\n`)),mdx(\"p\",null,\"Returns true if this handle points to an object (i.e. it was not moved from). \"),mdx(\"h3\",a({},{id:\"function-kind\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-kind\"}),\"\\xA7\"),\"function kind\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline value_kind kind() const\n`)),mdx(\"p\",null,\"Returns the kind of the value currently held by this handle. \"),mdx(\"h3\",a({},{id:\"function-is\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-is\"}),\"\\xA7\"),\"function is\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`template <typename T >\ninline bool is() const\n`)),mdx(\"p\",null,\"Returns true if this value is of the target type. \"),mdx(\"h3\",a({},{id:\"function-type-of\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-type-of\"}),\"\\xA7\"),\"function type_of\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline type type_of() const\n`)),mdx(\"p\",null,\"Returns the type of the value currently held by this handle. \"),mdx(\"h3\",a({},{id:\"function-to-string\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-to-string\"}),\"\\xA7\"),\"function to_string\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline string to_string() const\n`)),mdx(\"p\",null,\"Returns a string that represents the current value. \"),mdx(\"h3\",a({},{id:\"function-raw-vm\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-raw-vm\"}),\"\\xA7\"),\"function raw_vm\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline tiro_vm_t raw_vm() const\n`)),mdx(\"p\",null,\"Returns the raw vm instance associated with this handle. \"),mdx(\"h3\",a({},{id:\"function-raw-handle\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-raw-handle\"}),\"\\xA7\"),\"function raw_handle\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline tiro_handle_t raw_handle() const\n`)),mdx(\"p\",null,\"Returns the raw handle instance (nullptr for invalid handles). \"),mdx(\"h2\",a({},{id:\"protected-functions-documentation\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#protected-functions-documentation\"}),\"\\xA7\"),\"Protected Functions Documentation\"),mdx(\"h3\",a({},{id:\"function-handle-4\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#function-handle-4\"}),\"\\xA7\"),\"function handle\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`inline handle(\n    check_kind_t ,\n    handle && other,\n    value_kind expected\n)\n`)),mdx(\"h2\",a({},{id:\"protected-attributes-documentation\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"anchor-link\",href:\"#protected-attributes-documentation\"}),\"\\xA7\"),\"Protected Attributes Documentation\"),mdx(\"h3\",a({},{id:\"variable-check-kind\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"anchor-link\",href:\"#variable-check-kind\"}),\"\\xA7\"),\"variable check_kind\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-cpp\"}),`static constexpr check_kind_t check_kind {};\n`)),mdx(\"hr\",null),mdx(\"p\",null,\"Updated on 2022-02-27 at 21:17:13 +0100\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}